// Code generated by protoc-gen-go.
// source: github.com/3zheng/railgun/protodefine/router/router.proto
// DO NOT EDIT!

/*
Package bs_router is a generated protocol buffer package.

It is generated from these files:
	github.com/3zheng/railgun/protodefine/router/router.proto

It has these top-level messages:
	RouterTransferData
	RegisterAppReq
	RegisterAppRsp
*/
package bs_router

import proto "google.golang.org/protobuf/proto"
import fmt "fmt"
import math "math"
import bs_types "github.com/3zheng/railgun/protodefine/mytype"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CMDID_Router int32

const (
	CMDID_Router_IDUnknow         CMDID_Router = 0
	CMDID_Router_IDTransferData   CMDID_Router = 1
	CMDID_Router_IDRegisterAppReq CMDID_Router = 2
	CMDID_Router_IDRegisterAppRsp CMDID_Router = 3
	CMDID_Router_IDLast           CMDID_Router = 100
)

var CMDID_Router_name = map[int32]string{
	0:   "IDUnknow",
	1:   "IDTransferData",
	2:   "IDRegisterAppReq",
	3:   "IDRegisterAppRsp",
	100: "IDLast",
}
var CMDID_Router_value = map[string]int32{
	"IDUnknow":         0,
	"IDTransferData":   1,
	"IDRegisterAppReq": 2,
	"IDRegisterAppRsp": 3,
	"IDLast":           100,
}

func (x CMDID_Router) String() string {
	return proto.EnumName(CMDID_Router_name, int32(x))
}
func (CMDID_Router) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RouterTransferData_DataDirection int32

const (
	RouterTransferData_App2App    RouterTransferData_DataDirection = 0
	RouterTransferData_App2Client RouterTransferData_DataDirection = 1
	RouterTransferData_Client2App RouterTransferData_DataDirection = 2
)

var RouterTransferData_DataDirection_name = map[int32]string{
	0: "App2App",
	1: "App2Client",
	2: "Client2App",
}
var RouterTransferData_DataDirection_value = map[string]int32{
	"App2App":    0,
	"App2Client": 1,
	"Client2App": 2,
}

func (x RouterTransferData_DataDirection) String() string {
	return proto.EnumName(RouterTransferData_DataDirection_name, int32(x))
}
func (RouterTransferData_DataDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type RouterTransferData struct {
	Base          *bs_types.BaseInfo               `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	DestApptype   uint32                           `protobuf:"varint,2,opt,name=dest_apptype,json=destApptype" json:"dest_apptype,omitempty"`
	DestAppid     uint32                           `protobuf:"varint,3,opt,name=dest_appid,json=destAppid" json:"dest_appid,omitempty"`
	SrcApptype    uint32                           `protobuf:"varint,4,opt,name=src_apptype,json=srcApptype" json:"src_apptype,omitempty"`
	SrcAppid      uint32                           `protobuf:"varint,5,opt,name=src_appid,json=srcAppid" json:"src_appid,omitempty"`
	DataCmdKind   uint32                           `protobuf:"varint,6,opt,name=data_cmd_kind,json=dataCmdKind" json:"data_cmd_kind,omitempty"`
	DataCmdSubid  uint32                           `protobuf:"varint,7,opt,name=data_cmd_subid,json=dataCmdSubid" json:"data_cmd_subid,omitempty"`
	Data          []byte                           `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	DataDirection RouterTransferData_DataDirection `protobuf:"varint,9,opt,name=data_direction,json=dataDirection,enum=bs.router.RouterTransferData_DataDirection" json:"data_direction,omitempty"`
	// 如果是App2Client或者Client2App，下面4项有值，如果是App2App则可以不填
	ClientRemoteAddress string `protobuf:"bytes,10,opt,name=client_remote_address,json=clientRemoteAddress" json:"client_remote_address,omitempty"`
	AttGateid           uint32 `protobuf:"varint,11,opt,name=att_gateid,json=attGateid" json:"att_gateid,omitempty"`
	AttUserid           uint64 `protobuf:"varint,12,opt,name=att_userid,json=attUserid" json:"att_userid,omitempty"`
	AttGateconnid       uint64 `protobuf:"varint,13,opt,name=att_gateconnid,json=attGateconnid" json:"att_gateconnid,omitempty"`
}

func (m *RouterTransferData) Reset()                    { *m = RouterTransferData{} }
func (m *RouterTransferData) String() string            { return proto.CompactTextString(m) }
func (*RouterTransferData) ProtoMessage()               {}
func (*RouterTransferData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RouterTransferData) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type RegisterAppReq struct {
	Base      *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	AuthKey   string             `protobuf:"bytes,2,opt,name=auth_key,json=authKey" json:"auth_key,omitempty"`
	AttData   string             `protobuf:"bytes,3,opt,name=att_data,json=attData" json:"att_data,omitempty"`
	MyAddress string             `protobuf:"bytes,4,opt,name=my_address,json=myAddress" json:"my_address,omitempty"`
	AppType   uint32             `protobuf:"varint,5,opt,name=app_type,json=appType" json:"app_type,omitempty"`
	AppId     uint32             `protobuf:"varint,6,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (m *RegisterAppReq) Reset()                    { *m = RegisterAppReq{} }
func (m *RegisterAppReq) String() string            { return proto.CompactTextString(m) }
func (*RegisterAppReq) ProtoMessage()               {}
func (*RegisterAppReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegisterAppReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type RegisterAppRsp struct {
	Base      *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	RegResult uint32             `protobuf:"varint,2,opt,name=reg_result,json=regResult" json:"reg_result,omitempty"`
}

func (m *RegisterAppRsp) Reset()                    { *m = RegisterAppRsp{} }
func (m *RegisterAppRsp) String() string            { return proto.CompactTextString(m) }
func (*RegisterAppRsp) ProtoMessage()               {}
func (*RegisterAppRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterAppRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func init() {
	proto.RegisterType((*RouterTransferData)(nil), "bs.router.RouterTransferData")
	proto.RegisterType((*RegisterAppReq)(nil), "bs.router.RegisterAppReq")
	proto.RegisterType((*RegisterAppRsp)(nil), "bs.router.RegisterAppRsp")
	proto.RegisterEnum("bs.router.CMDID_Router", CMDID_Router_name, CMDID_Router_value)
	proto.RegisterEnum("bs.router.RouterTransferData_DataDirection", RouterTransferData_DataDirection_name, RouterTransferData_DataDirection_value)
}

func init() {
	proto.RegisterFile("github.com/3zheng/railgun/protodefine/router/router.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 581 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x49, 0x9b, 0x26, 0xf1, 0xe4, 0x8f, 0xa2, 0x85, 0x4a, 0x06, 0x84, 0x80, 0x08, 0x10,
	0x02, 0xc9, 0x91, 0xd2, 0x0b, 0x48, 0x5c, 0x4a, 0x2d, 0x21, 0xab, 0x70, 0x59, 0x5a, 0x71, 0xb4,
	0x9c, 0xec, 0x36, 0xb1, 0x5a, 0xaf, 0xcd, 0xee, 0x5a, 0xc8, 0xbc, 0x1c, 0x27, 0xde, 0x8b, 0xd9,
	0x59, 0x3b, 0xa2, 0xea, 0xa5, 0x87, 0x38, 0x9e, 0xef, 0x37, 0x33, 0x9e, 0xfd, 0x3c, 0x86, 0x8f,
	0xdb, 0xdc, 0xee, 0xea, 0x75, 0xb4, 0x29, 0x8b, 0xe5, 0xc9, 0xef, 0x9d, 0x54, 0xdb, 0xa5, 0xce,
	0xf2, 0x9b, 0x6d, 0xad, 0x96, 0x95, 0x2e, 0x6d, 0x29, 0xe4, 0x55, 0xae, 0xe4, 0x52, 0x97, 0xb5,
	0x95, 0xba, 0xfd, 0x8b, 0x88, 0xb0, 0x60, 0x6d, 0x22, 0x2f, 0x3c, 0xf9, 0x70, 0xbf, 0x2e, 0x45,
	0x63, 0x9b, 0x4a, 0x2e, 0xdd, 0xc5, 0xf8, 0x26, 0x8b, 0xbf, 0x7d, 0x60, 0x9c, 0x9a, 0x5c, 0xe8,
	0x4c, 0x99, 0x2b, 0xa9, 0xe3, 0xcc, 0x66, 0xec, 0x0d, 0xf4, 0xd7, 0x99, 0x91, 0x61, 0xef, 0x45,
	0xef, 0xed, 0x78, 0xc5, 0x22, 0x7c, 0x94, 0xaf, 0xfa, 0x8c, 0x6a, 0xa2, 0xae, 0x4a, 0x4e, 0x9c,
	0xbd, 0x84, 0x89, 0x90, 0xc6, 0xa6, 0x59, 0x55, 0x39, 0x1e, 0x1e, 0x60, 0xfe, 0x94, 0x8f, 0x9d,
	0x76, 0xea, 0x25, 0xf6, 0x0c, 0xa0, 0x4b, 0xc9, 0x45, 0x78, 0x48, 0x09, 0x41, 0x9b, 0x90, 0x0b,
	0xf6, 0x1c, 0xc6, 0x46, 0x6f, 0xf6, 0x0d, 0xfa, 0xc4, 0x01, 0xa5, 0xae, 0xfe, 0x29, 0x04, 0x6d,
	0x02, 0x96, 0x1f, 0x11, 0x1e, 0x79, 0x8c, 0xd5, 0x0b, 0x98, 0x0a, 0x9c, 0x37, 0xdd, 0x14, 0x22,
	0xbd, 0xce, 0x95, 0x08, 0x07, 0xed, 0x00, 0x28, 0x9e, 0x15, 0xe2, 0x1c, 0x25, 0xf6, 0x0a, 0x66,
	0xfb, 0x1c, 0x53, 0xaf, 0xb1, 0xcb, 0x90, 0x92, 0x26, 0x6d, 0xd2, 0x77, 0xa7, 0x31, 0x06, 0x7d,
	0x17, 0x87, 0x23, 0x64, 0x13, 0x4e, 0xf7, 0x8c, 0xb7, 0x95, 0x22, 0xd7, 0x72, 0x63, 0xf3, 0x52,
	0x85, 0x01, 0xd2, 0xd9, 0xea, 0x7d, 0xb4, 0xb7, 0x3e, 0xba, 0x6b, 0x5e, 0xe4, 0x2e, 0x71, 0x57,
	0xc2, 0x69, 0xc0, 0x7d, 0xc8, 0x56, 0x70, 0xbc, 0xb9, 0xc9, 0xa5, 0xb2, 0xa9, 0x96, 0x45, 0x69,
	0x65, 0x9a, 0x09, 0xa1, 0xa5, 0x31, 0x21, 0x60, 0xeb, 0x80, 0x3f, 0xf4, 0x90, 0x13, 0x3b, 0xf5,
	0xc8, 0x59, 0x98, 0x59, 0x9b, 0x6e, 0x33, 0x2b, 0x71, 0xfa, 0xb1, 0xb7, 0x10, 0x95, 0x2f, 0x24,
	0x74, 0xb8, 0x36, 0x52, 0x23, 0x9e, 0x20, 0xee, 0x13, 0xbe, 0x24, 0x81, 0xbd, 0x86, 0x59, 0x57,
	0xbd, 0x29, 0x95, 0xc2, 0x94, 0x29, 0xa5, 0x4c, 0xdb, 0x0e, 0x5e, 0x5c, 0x7c, 0x82, 0xe9, 0xad,
	0xc1, 0xd9, 0x18, 0x86, 0x68, 0xf2, 0x0a, 0x7f, 0xf3, 0x07, 0x6c, 0x06, 0xe0, 0x82, 0x33, 0x9a,
	0x6e, 0xde, 0x73, 0xb1, 0xbf, 0x27, 0x7e, 0xb0, 0xf8, 0xd3, 0x83, 0x19, 0x97, 0xdb, 0xdc, 0xa0,
	0x19, 0xa8, 0x70, 0xf9, 0xf3, 0xde, 0x3b, 0xf4, 0x18, 0x46, 0x59, 0x6d, 0x77, 0xe9, 0xb5, 0x6c,
	0x68, 0x7f, 0x02, 0x3e, 0x74, 0xf1, 0xb9, 0x6c, 0x08, 0xe1, 0xe8, 0xf4, 0x62, 0x0e, 0x5b, 0x64,
	0x2d, 0x6d, 0x28, 0x1e, 0xba, 0x68, 0xf6, 0xe6, 0xf5, 0x09, 0x06, 0x45, 0xd3, 0x59, 0xe6, 0x2a,
	0xab, 0x2a, 0xa5, 0x9d, 0xf2, 0x4b, 0x33, 0xc4, 0xf8, 0xc2, 0x2d, 0xd4, 0x31, 0x0c, 0x1c, 0xca,
	0xbb, 0x65, 0x39, 0xc2, 0x28, 0x11, 0x8b, 0x1f, 0xb7, 0x0f, 0x60, 0xaa, 0x7b, 0x1f, 0x00, 0x47,
	0xd1, 0x72, 0x8b, 0xef, 0xd3, 0xd4, 0x37, 0xb6, 0xfd, 0x04, 0x02, 0x54, 0x38, 0x09, 0xef, 0x76,
	0x30, 0x39, 0xfb, 0x16, 0x27, 0x71, 0xea, 0x57, 0x85, 0x4d, 0x60, 0x94, 0xc4, 0x97, 0xea, 0x5a,
	0x95, 0xbf, 0xd0, 0x58, 0x06, 0xb3, 0x24, 0xfe, 0x7f, 0x7d, 0xd0, 0xdc, 0x47, 0x30, 0x4f, 0xe2,
	0xdb, 0x6e, 0xce, 0x0f, 0xee, 0xaa, 0xa6, 0x9a, 0x1f, 0x32, 0x80, 0x41, 0x12, 0x7f, 0xcd, 0x8c,
	0x9d, 0x8b, 0xf5, 0x80, 0xbe, 0xe9, 0x93, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x13, 0xd0, 0xb9,
	0xfc, 0x55, 0x04, 0x00, 0x00,
}
