// Code generated by protoc-gen-go.
// source: github.com/3zheng/railgun/protodefine/client/client.proto
// DO NOT EDIT!

/*
Package bs_client is a generated protocol buffer package.

It is generated from these files:
	github.com/3zheng/railgun/protodefine/client/client.proto

It has these top-level messages:
	LoginReq
	LoginRsp
	TestRouter
	LogoutReq
	LogoutRsp
	QueryFundReq
	QueryFundRsp
	GetOnlineUserReq
	GetOnlineUserRsp
	KickUserReq
	KickUserRsp
*/
package bs_client

import proto "google.golang.org/protobuf/proto"
import fmt "fmt"
import math "math"
import bs_types "github.com/3zheng/railgun/protodefine/mytype"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CMDID_Client int32

const (
	CMDID_Client_IDUnknow           CMDID_Client = 0
	CMDID_Client_IDLoginReq         CMDID_Client = 1
	CMDID_Client_IDLoginRsp         CMDID_Client = 2
	CMDID_Client_IDLogoutReq        CMDID_Client = 3
	CMDID_Client_IDLogoutRsp        CMDID_Client = 4
	CMDID_Client_IDQueryFundReq     CMDID_Client = 10
	CMDID_Client_IDQueryFundRsp     CMDID_Client = 11
	CMDID_Client_IDGetOnlineUserReq CMDID_Client = 80
	CMDID_Client_IDGetOnlineUserRsp CMDID_Client = 81
	CMDID_Client_IDKickUserReq      CMDID_Client = 82
	CMDID_Client_IDKickUserRsp      CMDID_Client = 83
	CMDID_Client_IDTestRouter       CMDID_Client = 90
	CMDID_Client_IDLast             CMDID_Client = 100
)

var CMDID_Client_name = map[int32]string{
	0:   "IDUnknow",
	1:   "IDLoginReq",
	2:   "IDLoginRsp",
	3:   "IDLogoutReq",
	4:   "IDLogoutRsp",
	10:  "IDQueryFundReq",
	11:  "IDQueryFundRsp",
	80:  "IDGetOnlineUserReq",
	81:  "IDGetOnlineUserRsp",
	82:  "IDKickUserReq",
	83:  "IDKickUserRsp",
	90:  "IDTestRouter",
	100: "IDLast",
}
var CMDID_Client_value = map[string]int32{
	"IDUnknow":           0,
	"IDLoginReq":         1,
	"IDLoginRsp":         2,
	"IDLogoutReq":        3,
	"IDLogoutRsp":        4,
	"IDQueryFundReq":     10,
	"IDQueryFundRsp":     11,
	"IDGetOnlineUserReq": 80,
	"IDGetOnlineUserRsp": 81,
	"IDKickUserReq":      82,
	"IDKickUserRsp":      83,
	"IDTestRouter":       90,
	"IDLast":             100,
}

func (x CMDID_Client) String() string {
	return proto.EnumName(CMDID_Client_name, int32(x))
}
func (CMDID_Client) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type LoginReq_LoginAction int32

const (
	LoginReq_ByAccount  LoginReq_LoginAction = 0
	LoginReq_GuestLogin LoginReq_LoginAction = 2
	LoginReq_ByThirdID  LoginReq_LoginAction = 4
	LoginReq_Robot      LoginReq_LoginAction = 10
)

var LoginReq_LoginAction_name = map[int32]string{
	0:  "ByAccount",
	2:  "GuestLogin",
	4:  "ByThirdID",
	10: "Robot",
}
var LoginReq_LoginAction_value = map[string]int32{
	"ByAccount":  0,
	"GuestLogin": 2,
	"ByThirdID":  4,
	"Robot":      10,
}

func (x LoginReq_LoginAction) String() string {
	return proto.EnumName(LoginReq_LoginAction_name, int32(x))
}
func (LoginReq_LoginAction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type LoginReq_ClientOS int32

const (
	LoginReq_UNKWON       LoginReq_ClientOS = 0
	LoginReq_PC           LoginReq_ClientOS = 1
	LoginReq_IOS_AppStore LoginReq_ClientOS = 2
	LoginReq_Android      LoginReq_ClientOS = 4
	LoginReq_IOS_Breaked  LoginReq_ClientOS = 8
	LoginReq_WIN10        LoginReq_ClientOS = 16
)

var LoginReq_ClientOS_name = map[int32]string{
	0:  "UNKWON",
	1:  "PC",
	2:  "IOS_AppStore",
	4:  "Android",
	8:  "IOS_Breaked",
	16: "WIN10",
}
var LoginReq_ClientOS_value = map[string]int32{
	"UNKWON":       0,
	"PC":           1,
	"IOS_AppStore": 2,
	"Android":      4,
	"IOS_Breaked":  8,
	"WIN10":        16,
}

func (x LoginReq_ClientOS) String() string {
	return proto.EnumName(LoginReq_ClientOS_name, int32(x))
}
func (LoginReq_ClientOS) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

// 游客登录
type LoginReq_NetworkType int32

const (
	LoginReq_UNKWONType LoginReq_NetworkType = 0
	LoginReq_DIANXIN    LoginReq_NetworkType = 1
	LoginReq_YIDONG     LoginReq_NetworkType = 2
	LoginReq_LIANTONG   LoginReq_NetworkType = 3
	LoginReq_WIFI       LoginReq_NetworkType = 4
)

var LoginReq_NetworkType_name = map[int32]string{
	0: "UNKWONType",
	1: "DIANXIN",
	2: "YIDONG",
	3: "LIANTONG",
	4: "WIFI",
}
var LoginReq_NetworkType_value = map[string]int32{
	"UNKWONType": 0,
	"DIANXIN":    1,
	"YIDONG":     2,
	"LIANTONG":   3,
	"WIFI":       4,
}

func (x LoginReq_NetworkType) String() string {
	return proto.EnumName(LoginReq_NetworkType_name, int32(x))
}
func (LoginReq_NetworkType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

type LoginRsp_Result int32

const (
	LoginRsp_SUCCESS      LoginRsp_Result = 0
	LoginRsp_NOTEXIST     LoginRsp_Result = 1
	LoginRsp_FROZEN       LoginRsp_Result = 2
	LoginRsp_FALSEPW      LoginRsp_Result = 3
	LoginRsp_NETERROR     LoginRsp_Result = 4
	LoginRsp_APPISBUSY    LoginRsp_Result = 5
	LoginRsp_GUESTFORBID  LoginRsp_Result = 6
	LoginRsp_CONNECTERROR LoginRsp_Result = 7
	LoginRsp_VERSIONOLD   LoginRsp_Result = 8
	LoginRsp_FREQUENTLY   LoginRsp_Result = 10
	LoginRsp_SERVERERROR  LoginRsp_Result = 255
)

var LoginRsp_Result_name = map[int32]string{
	0:   "SUCCESS",
	1:   "NOTEXIST",
	2:   "FROZEN",
	3:   "FALSEPW",
	4:   "NETERROR",
	5:   "APPISBUSY",
	6:   "GUESTFORBID",
	7:   "CONNECTERROR",
	8:   "VERSIONOLD",
	10:  "FREQUENTLY",
	255: "SERVERERROR",
}
var LoginRsp_Result_value = map[string]int32{
	"SUCCESS":      0,
	"NOTEXIST":     1,
	"FROZEN":       2,
	"FALSEPW":      3,
	"NETERROR":     4,
	"APPISBUSY":    5,
	"GUESTFORBID":  6,
	"CONNECTERROR": 7,
	"VERSIONOLD":   8,
	"FREQUENTLY":   10,
	"SERVERERROR":  255,
}

func (x LoginRsp_Result) String() string {
	return proto.EnumName(LoginRsp_Result_name, int32(x))
}
func (LoginRsp_Result) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type TestRouter_Result int32

const (
	TestRouter_UNKWON      TestRouter_Result = 0
	TestRouter_SUCCESS     TestRouter_Result = 1
	TestRouter_NOTEXIST    TestRouter_Result = 2
	TestRouter_FROZEN      TestRouter_Result = 3
	TestRouter_FREQUENTLY  TestRouter_Result = 4
	TestRouter_APPISBUSY   TestRouter_Result = 5
	TestRouter_GUESTFORBID TestRouter_Result = 6
	TestRouter_APPINITING  TestRouter_Result = 7
	TestRouter_VERSIONOLD  TestRouter_Result = 8
	TestRouter_NOMOREGUEST TestRouter_Result = 9
	TestRouter_SERVERERROR TestRouter_Result = 255
)

var TestRouter_Result_name = map[int32]string{
	0:   "UNKWON",
	1:   "SUCCESS",
	2:   "NOTEXIST",
	3:   "FROZEN",
	4:   "FREQUENTLY",
	5:   "APPISBUSY",
	6:   "GUESTFORBID",
	7:   "APPINITING",
	8:   "VERSIONOLD",
	9:   "NOMOREGUEST",
	255: "SERVERERROR",
}
var TestRouter_Result_value = map[string]int32{
	"UNKWON":      0,
	"SUCCESS":     1,
	"NOTEXIST":    2,
	"FROZEN":      3,
	"FREQUENTLY":  4,
	"APPISBUSY":   5,
	"GUESTFORBID": 6,
	"APPINITING":  7,
	"VERSIONOLD":  8,
	"NOMOREGUEST": 9,
	"SERVERERROR": 255,
}

func (x TestRouter_Result) String() string {
	return proto.EnumName(TestRouter_Result_name, int32(x))
}
func (TestRouter_Result) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

// /Normal登出回复或AnotherLogin登出通知
type LogoutRsp_LogoutReason int32

const (
	LogoutRsp_Normal       LogoutRsp_LogoutReason = 0
	LogoutRsp_AnotherLogin LogoutRsp_LogoutReason = 1
)

var LogoutRsp_LogoutReason_name = map[int32]string{
	0: "Normal",
	1: "AnotherLogin",
}
var LogoutRsp_LogoutReason_value = map[string]int32{
	"Normal":       0,
	"AnotherLogin": 1,
}

func (x LogoutRsp_LogoutReason) String() string {
	return proto.EnumName(LogoutRsp_LogoutReason_name, int32(x))
}
func (LogoutRsp_LogoutReason) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type LoginReq struct {
	Base          *bs_types.BaseInfo   `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	GameKind      uint32               `protobuf:"varint,2,opt,name=game_kind,json=gameKind" json:"game_kind,omitempty"`
	ActionType    LoginReq_LoginAction `protobuf:"varint,3,opt,name=action_type,json=actionType,enum=bs.client.LoginReq_LoginAction" json:"action_type,omitempty"`
	ClientOs      LoginReq_ClientOS    `protobuf:"varint,4,opt,name=client_os,json=clientOs,enum=bs.client.LoginReq_ClientOS" json:"client_os,omitempty"`
	LoginAccount  string               `protobuf:"bytes,7,opt,name=login_account,json=loginAccount" json:"login_account,omitempty"`
	LoginPassword string               `protobuf:"bytes,8,opt,name=login_password,json=loginPassword" json:"login_password,omitempty"`
	ClientVersion string               `protobuf:"bytes,9,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	Client_IP     string               `protobuf:"bytes,10,opt,name=client_IP,json=clientIP" json:"client_IP,omitempty"`
	SystemVersion string               `protobuf:"bytes,11,opt,name=system_version,json=systemVersion" json:"system_version,omitempty"`
	LogonToken    uint32               `protobuf:"varint,21,opt,name=logon_token,json=logonToken" json:"logon_token,omitempty"`
	MobileCode    string               `protobuf:"bytes,22,opt,name=mobile_code,json=mobileCode" json:"mobile_code,omitempty"`
	OsVersion     string               `protobuf:"bytes,23,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	SpId          LoginReq_NetworkType `protobuf:"varint,24,opt,name=sp_id,json=spId,enum=bs.client.LoginReq_NetworkType" json:"sp_id,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type LoginRsp struct {
	Base           *bs_types.BaseInfo        `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	LoginResult    LoginRsp_Result           `protobuf:"varint,2,opt,name=login_result,json=loginResult,enum=bs.client.LoginRsp_Result" json:"login_result,omitempty"`
	LoginInfo      string                    `protobuf:"bytes,3,opt,name=login_info,json=loginInfo" json:"login_info,omitempty"`
	UserBaseInfo   *bs_types.BaseUserInfo    `protobuf:"bytes,4,opt,name=user_base_info,json=userBaseInfo" json:"user_base_info,omitempty"`
	UserSesionInfo *bs_types.UserSessionInfo `protobuf:"bytes,5,opt,name=user_sesion_info,json=userSesionInfo" json:"user_sesion_info,omitempty"`
	UserId         uint64                    `protobuf:"varint,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *LoginRsp) Reset()                    { *m = LoginRsp{} }
func (m *LoginRsp) String() string            { return proto.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()               {}
func (*LoginRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *LoginRsp) GetUserBaseInfo() *bs_types.BaseUserInfo {
	if m != nil {
		return m.UserBaseInfo
	}
	return nil
}

func (m *LoginRsp) GetUserSesionInfo() *bs_types.UserSessionInfo {
	if m != nil {
		return m.UserSesionInfo
	}
	return nil
}

// 就测试用的，字段随便乱写
type TestRouter struct {
	Base        *bs_types.BaseInfo        `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	LoginResult TestRouter_Result         `protobuf:"varint,2,opt,name=login_result,json=loginResult,enum=bs.client.TestRouter_Result" json:"login_result,omitempty"`
	LoginInfo   string                    `protobuf:"bytes,3,opt,name=login_info,json=loginInfo" json:"login_info,omitempty"`
	BaseInfo    *bs_types.BaseUserInfo    `protobuf:"bytes,4,opt,name=base_info,json=baseInfo" json:"base_info,omitempty"`
	SessionInfo *bs_types.UserSessionInfo `protobuf:"bytes,5,opt,name=session_info,json=sessionInfo" json:"session_info,omitempty"`
	UserId      uint64                    `protobuf:"varint,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Tips        string                    `protobuf:"bytes,7,opt,name=tips" json:"tips,omitempty"`
}

func (m *TestRouter) Reset()                    { *m = TestRouter{} }
func (m *TestRouter) String() string            { return proto.CompactTextString(m) }
func (*TestRouter) ProtoMessage()               {}
func (*TestRouter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TestRouter) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *TestRouter) GetBaseInfo() *bs_types.BaseUserInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *TestRouter) GetSessionInfo() *bs_types.UserSessionInfo {
	if m != nil {
		return m.SessionInfo
	}
	return nil
}

type LogoutReq struct {
	Base   *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	UserId uint64             `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *LogoutReq) Reset()                    { *m = LogoutReq{} }
func (m *LogoutReq) String() string            { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()               {}
func (*LogoutReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LogoutReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type LogoutRsp struct {
	Base         *bs_types.BaseInfo     `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	LogoutReason LogoutRsp_LogoutReason `protobuf:"varint,2,opt,name=logout_reason,json=logoutReason,enum=bs.client.LogoutRsp_LogoutReason" json:"logout_reason,omitempty"`
	ReasonInfo   string                 `protobuf:"bytes,3,opt,name=reason_info,json=reasonInfo" json:"reason_info,omitempty"`
}

func (m *LogoutRsp) Reset()                    { *m = LogoutRsp{} }
func (m *LogoutRsp) String() string            { return proto.CompactTextString(m) }
func (*LogoutRsp) ProtoMessage()               {}
func (*LogoutRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LogoutRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type QueryFundReq struct {
	Base     *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	FundType uint32             `protobuf:"varint,2,opt,name=fund_type,json=fundType" json:"fund_type,omitempty"`
	UserId   uint64             `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *QueryFundReq) Reset()                    { *m = QueryFundReq{} }
func (m *QueryFundReq) String() string            { return proto.CompactTextString(m) }
func (*QueryFundReq) ProtoMessage()               {}
func (*QueryFundReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *QueryFundReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type QueryFundRsp struct {
	Base   *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	UserId uint64             `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	//
	ChangeReason uint32               `protobuf:"varint,3,opt,name=change_reason,json=changeReason" json:"change_reason,omitempty"`
	ChangeInfo   string               `protobuf:"bytes,4,opt,name=change_info,json=changeInfo" json:"change_info,omitempty"`
	FundItems    []*bs_types.FundItem `protobuf:"bytes,5,rep,name=fund_items,json=fundItems" json:"fund_items,omitempty"`
}

func (m *QueryFundRsp) Reset()                    { *m = QueryFundRsp{} }
func (m *QueryFundRsp) String() string            { return proto.CompactTextString(m) }
func (*QueryFundRsp) ProtoMessage()               {}
func (*QueryFundRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QueryFundRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *QueryFundRsp) GetFundItems() []*bs_types.FundItem {
	if m != nil {
		return m.FundItems
	}
	return nil
}

type GetOnlineUserReq struct {
	Base        *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	CheckString string             `protobuf:"bytes,2,opt,name=check_string,json=checkString" json:"check_string,omitempty"`
	UserId      uint64             `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetOnlineUserReq) Reset()                    { *m = GetOnlineUserReq{} }
func (m *GetOnlineUserReq) String() string            { return proto.CompactTextString(m) }
func (*GetOnlineUserReq) ProtoMessage()               {}
func (*GetOnlineUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetOnlineUserReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type GetOnlineUserRsp struct {
	Base *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	// repeated OnlineUserInfo user_info_array=2;
	// repeated OnlineAPPInfo app_info_array=3;
	Result bool `protobuf:"varint,4,opt,name=result" json:"result,omitempty"`
}

func (m *GetOnlineUserRsp) Reset()                    { *m = GetOnlineUserRsp{} }
func (m *GetOnlineUserRsp) String() string            { return proto.CompactTextString(m) }
func (*GetOnlineUserRsp) ProtoMessage()               {}
func (*GetOnlineUserRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetOnlineUserRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type KickUserReq struct {
	Base        *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	CheckString string             `protobuf:"bytes,2,opt,name=check_string,json=checkString" json:"check_string,omitempty"`
	ArrayUserId []uint64           `protobuf:"varint,3,rep,packed,name=array_user_id,json=arrayUserId" json:"array_user_id,omitempty"`
	OpUserId    uint64             `protobuf:"varint,4,opt,name=op_user_id,json=opUserId" json:"op_user_id,omitempty"`
}

func (m *KickUserReq) Reset()                    { *m = KickUserReq{} }
func (m *KickUserReq) String() string            { return proto.CompactTextString(m) }
func (*KickUserReq) ProtoMessage()               {}
func (*KickUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *KickUserReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type KickUserRsp struct {
	Base *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	IsOk bool               `protobuf:"varint,2,opt,name=is_ok,json=isOk" json:"is_ok,omitempty"`
}

func (m *KickUserRsp) Reset()                    { *m = KickUserRsp{} }
func (m *KickUserRsp) String() string            { return proto.CompactTextString(m) }
func (*KickUserRsp) ProtoMessage()               {}
func (*KickUserRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *KickUserRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginReq)(nil), "bs.client.LoginReq")
	proto.RegisterType((*LoginRsp)(nil), "bs.client.LoginRsp")
	proto.RegisterType((*TestRouter)(nil), "bs.client.TestRouter")
	proto.RegisterType((*LogoutReq)(nil), "bs.client.LogoutReq")
	proto.RegisterType((*LogoutRsp)(nil), "bs.client.LogoutRsp")
	proto.RegisterType((*QueryFundReq)(nil), "bs.client.QueryFundReq")
	proto.RegisterType((*QueryFundRsp)(nil), "bs.client.QueryFundRsp")
	proto.RegisterType((*GetOnlineUserReq)(nil), "bs.client.GetOnlineUserReq")
	proto.RegisterType((*GetOnlineUserRsp)(nil), "bs.client.GetOnlineUserRsp")
	proto.RegisterType((*KickUserReq)(nil), "bs.client.KickUserReq")
	proto.RegisterType((*KickUserRsp)(nil), "bs.client.KickUserRsp")
	proto.RegisterEnum("bs.client.CMDID_Client", CMDID_Client_name, CMDID_Client_value)
	proto.RegisterEnum("bs.client.LoginReq_LoginAction", LoginReq_LoginAction_name, LoginReq_LoginAction_value)
	proto.RegisterEnum("bs.client.LoginReq_ClientOS", LoginReq_ClientOS_name, LoginReq_ClientOS_value)
	proto.RegisterEnum("bs.client.LoginReq_NetworkType", LoginReq_NetworkType_name, LoginReq_NetworkType_value)
	proto.RegisterEnum("bs.client.LoginRsp_Result", LoginRsp_Result_name, LoginRsp_Result_value)
	proto.RegisterEnum("bs.client.TestRouter_Result", TestRouter_Result_name, TestRouter_Result_value)
	proto.RegisterEnum("bs.client.LogoutRsp_LogoutReason", LogoutRsp_LogoutReason_name, LogoutRsp_LogoutReason_value)
}

func init() {
	proto.RegisterFile("github.com/3zheng/railgun/protodefine/client/client.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0xdf, 0x72, 0xdb, 0x44,
	0x17, 0xff, 0x1c, 0x3b, 0x8e, 0x7d, 0xe4, 0xe4, 0x13, 0x62, 0x68, 0x45, 0x29, 0x53, 0x2a, 0x06,
	0x86, 0x61, 0x18, 0x87, 0xb6, 0x5c, 0xd0, 0x99, 0x32, 0xe0, 0x58, 0x72, 0x66, 0x69, 0x2a, 0xb9,
	0x2b, 0xbb, 0x69, 0x7a, 0xa3, 0x91, 0xed, 0x8d, 0xa3, 0xb1, 0x23, 0x09, 0xad, 0xdc, 0x4e, 0x78,
	0x07, 0x5e, 0x80, 0x87, 0xe0, 0x39, 0x18, 0xde, 0x81, 0x4b, 0x5e, 0x82, 0x1b, 0x38, 0xbb, 0x2b,
	0x3b, 0x4a, 0x9a, 0x0c, 0x31, 0x33, 0xdc, 0xd8, 0xda, 0xb3, 0xbf, 0xf3, 0x67, 0xcf, 0xef, 0x9c,
	0xb3, 0x0b, 0x8f, 0xa7, 0x51, 0x7e, 0xb2, 0x18, 0xb5, 0xc7, 0xc9, 0xe9, 0xee, 0xa3, 0x1f, 0x4f,
	0x58, 0x3c, 0xdd, 0xcd, 0xc2, 0x68, 0x3e, 0x5d, 0xc4, 0xbb, 0x69, 0x96, 0xe4, 0xc9, 0x84, 0x1d,
	0x47, 0x31, 0xdb, 0x1d, 0xcf, 0x23, 0x16, 0xe7, 0xc5, 0x5f, 0x5b, 0xee, 0x18, 0xcd, 0x11, 0x6f,
	0x2b, 0xc1, 0x9d, 0xaf, 0x6f, 0x66, 0xe5, 0xf4, 0x2c, 0x3f, 0x4b, 0xd9, 0xae, 0xf8, 0xe1, 0xca,
	0x88, 0xf5, 0x53, 0x1d, 0x1a, 0x07, 0xc9, 0x34, 0x8a, 0x29, 0xfb, 0xc1, 0xf8, 0x14, 0x6a, 0xa3,
	0x90, 0x33, 0xb3, 0xf2, 0x51, 0xe5, 0x33, 0xed, 0xa1, 0xd1, 0x46, 0x07, 0x0a, 0xbb, 0x87, 0x52,
	0x12, 0x1f, 0x27, 0x54, 0xee, 0x1b, 0x1f, 0x40, 0x73, 0x1a, 0x9e, 0xb2, 0x60, 0x16, 0xc5, 0x13,
	0x73, 0x03, 0xc1, 0xdb, 0xb4, 0x21, 0x04, 0x4f, 0x71, 0x6d, 0x7c, 0x07, 0x5a, 0x38, 0xce, 0xa3,
	0x24, 0x0e, 0x84, 0xae, 0x59, 0xc5, 0xed, 0x9d, 0x87, 0xf7, 0xda, 0xab, 0x60, 0xdb, 0x4b, 0x77,
	0xea, 0xa3, 0x23, 0xb1, 0x14, 0x94, 0xce, 0x00, 0x55, 0x8c, 0xc7, 0xd0, 0x54, 0xd0, 0x20, 0xe1,
	0x66, 0x4d, 0xea, 0xdf, 0xbd, 0x4a, 0xbf, 0x2b, 0xd7, 0x9e, 0x4f, 0x1b, 0x6a, 0xc7, 0xe3, 0xc6,
	0xc7, 0xb0, 0x3d, 0x17, 0xdb, 0x41, 0x38, 0x1e, 0x27, 0x8b, 0x38, 0x37, 0xb7, 0x50, 0xbd, 0x49,
	0x5b, 0x73, 0xe5, 0x4a, 0xca, 0x8c, 0x4f, 0x60, 0x47, 0x81, 0xd2, 0x90, 0xf3, 0x37, 0x49, 0x36,
	0x31, 0x1b, 0x12, 0xa5, 0x54, 0xfb, 0x85, 0x50, 0xc0, 0x8a, 0x30, 0x5e, 0xb3, 0x8c, 0x63, 0x70,
	0x66, 0x53, 0xc1, 0x94, 0xf4, 0x85, 0x12, 0x8a, 0x64, 0x14, 0x30, 0xd2, 0x37, 0x41, 0x22, 0x8a,
	0x78, 0x48, 0x5f, 0xd8, 0xe0, 0x67, 0x3c, 0x67, 0xa7, 0x2b, 0x1b, 0x9a, 0xb2, 0xa1, 0xa4, 0x4b,
	0x1b, 0xf7, 0x40, 0x43, 0xdf, 0x22, 0x65, 0xc9, 0x8c, 0xc5, 0xe6, 0x7b, 0x32, 0xa5, 0x20, 0x45,
	0x03, 0x21, 0x11, 0x80, 0xd3, 0x64, 0x14, 0xcd, 0x59, 0x30, 0x46, 0x32, 0xcd, 0x5b, 0xd2, 0x08,
	0x28, 0x51, 0x17, 0x25, 0xc6, 0x87, 0x00, 0x09, 0x5f, 0x39, 0xb9, 0x2d, 0xf7, 0x9b, 0x09, 0x5f,
	0x3a, 0xf8, 0x0a, 0x36, 0x79, 0x1a, 0x44, 0x13, 0xd3, 0xbc, 0x9e, 0x0e, 0x97, 0xe5, 0x78, 0xee,
	0x99, 0xa0, 0x80, 0xd6, 0x78, 0x4a, 0x26, 0x56, 0x0f, 0xb4, 0x12, 0x47, 0xc6, 0x36, 0x34, 0xf7,
	0xce, 0x8a, 0x24, 0xea, 0xff, 0x33, 0x76, 0x00, 0xf6, 0x17, 0x8c, 0xe7, 0x12, 0xa2, 0x6f, 0xa8,
	0xed, 0xc1, 0x49, 0x94, 0x4d, 0x88, 0xad, 0xd7, 0x8c, 0x26, 0x6c, 0xd2, 0x64, 0x94, 0xe4, 0x3a,
	0x58, 0x47, 0xd0, 0x58, 0x72, 0x65, 0x00, 0xd4, 0x87, 0xee, 0xd3, 0x43, 0xcf, 0x45, 0x0b, 0x75,
	0xd8, 0xe8, 0x77, 0xf5, 0x8a, 0xa1, 0x43, 0x8b, 0x78, 0x7e, 0xd0, 0x49, 0x53, 0x3f, 0x4f, 0x32,
	0x86, 0xb6, 0x34, 0xd8, 0xea, 0xc4, 0x93, 0x2c, 0x89, 0x26, 0x68, 0xe9, 0xff, 0xa0, 0x89, 0xed,
	0xbd, 0x8c, 0x85, 0x33, 0x36, 0xd1, 0x1b, 0xc2, 0xf4, 0x21, 0x71, 0x1f, 0x7c, 0xa9, 0xeb, 0x96,
	0x0b, 0x5a, 0x29, 0x6e, 0x11, 0x93, 0xb2, 0x2e, 0x56, 0xe8, 0x01, 0xed, 0xd8, 0xa4, 0xe3, 0xbe,
	0x24, 0x2e, 0xba, 0x41, 0xd7, 0x47, 0xc4, 0xf6, 0xdc, 0x7d, 0x74, 0xd0, 0xc2, 0xb2, 0xc7, 0x8d,
	0x81, 0x58, 0x55, 0x8d, 0x06, 0xd4, 0x0e, 0x49, 0x8f, 0xe8, 0x35, 0xeb, 0xf7, 0xea, 0xb2, 0x1f,
	0x78, 0x7a, 0xe3, 0x7e, 0xf8, 0x06, 0x54, 0x81, 0x05, 0x19, 0xe3, 0x8b, 0x79, 0x2e, 0x5b, 0x62,
	0xe7, 0xe1, 0x9d, 0xb7, 0x92, 0xcc, 0xd3, 0x36, 0x95, 0x08, 0xaa, 0xcd, 0x55, 0xd6, 0xc5, 0x42,
	0x70, 0xa7, 0xd4, 0x23, 0x34, 0x29, 0x1b, 0x06, 0xb9, 0x93, 0x12, 0xe1, 0xc3, 0x78, 0x02, 0x3b,
	0x0b, 0xce, 0xb2, 0x40, 0xb8, 0x52, 0x90, 0x9a, 0x8c, 0xe7, 0xd6, 0xc5, 0x78, 0x86, 0x88, 0x91,
	0x31, 0xb5, 0x04, 0x7a, 0x19, 0xa1, 0xd1, 0x05, 0x5d, 0x6a, 0x73, 0x26, 0x0a, 0x41, 0xe9, 0x6f,
	0x4a, 0xfd, 0xf7, 0xcf, 0xf5, 0x85, 0xae, 0xcf, 0xb8, 0x40, 0x48, 0x13, 0xd2, 0xa1, 0xcf, 0x96,
	0x6b, 0xe3, 0x36, 0x6c, 0x49, 0x23, 0x58, 0x40, 0x75, 0xd4, 0xad, 0xd1, 0xba, 0x58, 0x62, 0x85,
	0xfc, 0x52, 0x81, 0x7a, 0x71, 0x0a, 0x4c, 0xb5, 0x3f, 0xec, 0x76, 0x1d, 0xdf, 0xc7, 0xbc, 0x63,
	0x7a, 0x5d, 0x6f, 0xe0, 0xbc, 0x24, 0xfe, 0x40, 0x25, 0xbe, 0x47, 0xbd, 0x57, 0x8e, 0xab, 0x98,
	0xed, 0x75, 0x0e, 0x7c, 0xa7, 0x7f, 0x88, 0x79, 0x17, 0x30, 0x67, 0xe0, 0x50, 0xea, 0x51, 0xe4,
	0x19, 0x0b, 0xa8, 0xd3, 0xef, 0x13, 0x7f, 0x6f, 0xe8, 0x1f, 0xe9, 0x9b, 0x82, 0xf6, 0xfd, 0xa1,
	0xe3, 0x0f, 0x7a, 0x1e, 0xdd, 0xc3, 0x8a, 0xaa, 0x8b, 0x32, 0xe9, 0x7a, 0xae, 0xeb, 0x74, 0x0b,
	0x8d, 0x2d, 0x41, 0xf7, 0x0b, 0x87, 0xfa, 0xc4, 0x73, 0xbd, 0x03, 0x1b, 0x0b, 0x03, 0xd7, 0x3d,
	0xea, 0x3c, 0x1f, 0x3a, 0xee, 0xe0, 0xe0, 0x48, 0x07, 0xd4, 0xd0, 0x7c, 0x87, 0x22, 0x44, 0x29,
	0xfc, 0x55, 0xb1, 0xfe, 0xa8, 0x02, 0x0c, 0xb0, 0x68, 0x69, 0xb2, 0xc8, 0x59, 0x76, 0x63, 0x86,
	0xbf, 0xbd, 0x92, 0xe1, 0xf2, 0x54, 0x3a, 0x37, 0xfa, 0x6f, 0x38, 0x7e, 0x04, 0xcd, 0x9b, 0xd2,
	0xdb, 0x18, 0x2d, 0xa9, 0x7d, 0x02, 0x2d, 0xae, 0x48, 0xbb, 0x21, 0xad, 0x1a, 0x3f, 0x5f, 0x5c,
	0xcb, 0xa9, 0x61, 0x40, 0x2d, 0x8f, 0x52, 0x5e, 0x8c, 0x4e, 0xf9, 0x5d, 0xe6, 0xb9, 0xdc, 0xc0,
	0x25, 0xce, 0x2b, 0x17, 0x38, 0xdf, 0x28, 0x71, 0x5e, 0xbd, 0x44, 0xcb, 0x3f, 0x13, 0x8d, 0x78,
	0xb1, 0xef, 0x92, 0x01, 0xc1, 0xf6, 0x7c, 0x9b, 0x66, 0x54, 0x70, 0xbd, 0x67, 0x1e, 0x75, 0xa4,
	0x9a, 0xde, 0xbc, 0x82, 0xe7, 0x03, 0x68, 0x62, 0xcf, 0x21, 0x1f, 0xeb, 0xdc, 0x6b, 0xa5, 0x94,
	0x6c, 0x5c, 0x28, 0xf3, 0xdf, 0x2a, 0x2b, 0x73, 0x6b, 0x8c, 0x85, 0x9e, 0xbc, 0x8c, 0x50, 0x09,
	0xab, 0x26, 0xe4, 0x38, 0x96, 0x55, 0xd5, 0xdc, 0xbf, 0x38, 0x17, 0x94, 0xd1, 0xe5, 0x97, 0x04,
	0xca, 0xfb, 0x6a, 0xb5, 0x12, 0xc3, 0x5f, 0x19, 0x28, 0x17, 0x0f, 0x28, 0x91, 0x70, 0x67, 0x7d,
	0x01, 0xad, 0xb2, 0xba, 0xc8, 0xbd, 0x9b, 0x64, 0xa7, 0xe1, 0x1c, 0x29, 0xc2, 0xa6, 0xe9, 0xc4,
	0x49, 0x7e, 0xc2, 0x32, 0x35, 0xa7, 0x2b, 0xd6, 0x1c, 0x5a, 0xcf, 0x17, 0x2c, 0x3b, 0xeb, 0x2d,
	0xe2, 0xc9, 0x9a, 0xb7, 0xfe, 0x31, 0xaa, 0xa8, 0x6b, 0xbd, 0xb8, 0xf5, 0x85, 0x40, 0x0e, 0xde,
	0x52, 0xea, 0xaa, 0x17, 0x52, 0xf7, 0x6b, 0xa5, 0xec, 0x6e, 0x8d, 0xec, 0x5d, 0x47, 0x86, 0xb8,
	0xe3, 0xc7, 0x27, 0x61, 0x3c, 0x65, 0xcb, 0xb4, 0x56, 0x65, 0x2c, 0x2d, 0x25, 0x3c, 0xcf, 0x59,
	0x01, 0x5a, 0xb5, 0x14, 0xe6, 0x4c, 0x89, 0x64, 0xf9, 0x3f, 0x00, 0x90, 0xa7, 0x89, 0xf0, 0x1a,
	0xe6, 0xd8, 0x3a, 0xd5, 0x8b, 0xc1, 0x88, 0x68, 0x09, 0x6e, 0x51, 0x79, 0x66, 0xf1, 0xc5, 0xad,
	0xd7, 0xa0, 0xef, 0xb3, 0xdc, 0x8b, 0xe7, 0xf8, 0x96, 0x12, 0xad, 0xb5, 0x4e, 0xf2, 0xee, 0x03,
	0xc6, 0xc7, 0xc6, 0xb3, 0x80, 0xe7, 0x59, 0x14, 0x4f, 0xe5, 0x91, 0x9a, 0x54, 0x93, 0x32, 0x5f,
	0x8a, 0xae, 0x4f, 0x21, 0xbd, 0xec, 0x77, 0x8d, 0x2c, 0xde, 0x82, 0x7a, 0x31, 0xb2, 0x44, 0x0a,
	0x1a, 0xb4, 0x58, 0x59, 0x3f, 0x57, 0x40, 0x7b, 0x1a, 0x8d, 0x67, 0xff, 0xc1, 0x39, 0x2c, 0xd8,
	0x0e, 0xb3, 0x2c, 0x3c, 0x0b, 0xce, 0x4f, 0x53, 0xc5, 0xd3, 0x68, 0x52, 0x38, 0x54, 0x1c, 0xde,
	0xc5, 0xe7, 0x4a, 0xba, 0x02, 0xd4, 0xe4, 0x71, 0x1b, 0x49, 0xaa, 0x76, 0xad, 0xef, 0x4b, 0xb1,
	0xad, 0x71, 0xd6, 0x77, 0x61, 0x33, 0xe2, 0x41, 0x32, 0x93, 0x41, 0x35, 0x68, 0x2d, 0xe2, 0xde,
	0xec, 0xf3, 0x3f, 0xb1, 0xfe, 0xba, 0xcf, 0x6c, 0x62, 0x07, 0xea, 0x09, 0x22, 0xc6, 0x14, 0xb1,
	0x87, 0xf1, 0x2c, 0x4e, 0xde, 0xa8, 0x47, 0x0c, 0xb1, 0x97, 0x4f, 0x20, 0x1c, 0x62, 0xa5, 0x35,
	0x4f, 0x71, 0x8c, 0x89, 0xb7, 0x87, 0xbd, 0x9a, 0x24, 0x38, 0xcb, 0xca, 0x02, 0x44, 0xd4, 0x70,
	0x5c, 0xee, 0x10, 0xbb, 0xdc, 0x50, 0x78, 0xef, 0x5c, 0x92, 0x21, 0x4e, 0x43, 0x26, 0x0c, 0x62,
	0x5f, 0xae, 0x1f, 0xbd, 0x7f, 0x95, 0x1c, 0xf1, 0xcf, 0x8d, 0x77, 0x60, 0x9b, 0xd8, 0x25, 0x8a,
	0x74, 0x7a, 0x49, 0x84, 0x28, 0x5f, 0x3e, 0x9d, 0xec, 0xf3, 0xbb, 0x47, 0x7f, 0x25, 0x9a, 0x1f,
	0x03, 0x0c, 0x79, 0xae, 0x4f, 0x46, 0x75, 0xf9, 0xc8, 0x7f, 0xf4, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x8a, 0x06, 0x51, 0xb0, 0x66, 0x0c, 0x00, 0x00,
}
