// Code generated by protoc-gen-go.
// source: railgun/protodefine/AppFrame/AppFrame.proto
// DO NOT EDIT!

/*
Package bs_appframe is a generated protocol buffer package.

It is generated from these files:
	railgun/protodefine/AppFrame/AppFrame.proto

It has these top-level messages:
	GateClientAuth
	GateSingleConnectPulse
	UserOnlineReq
	UserOnlineRsp
	UserOffline
	QueryUserInfoReq
	QueryUserInfoRsp
	ChangeFundReq
	ChangeFundRsp
	SubscribeReq
	UserLeaveMatchNotify
	AppHeartPulse
	WorkLoadReq
	WorkLoadRsp
	MsgToBatchUsers
	StopAppReq
	StopAppRsp
	BroadcastToCenter
	BroadcastToClient
*/
package bs_appframe

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bs_types "railgun/protodefine/mytype"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CMDID_AppFrame int32

const (
	CMDID_AppFrame_IDUnknow CMDID_AppFrame = 0
	// / Gate客户端的用户关联信息 Online/Login---->Gate
	// 目前主要是Online 发送到Gate,
	// 表示连接到Gate的某个客户端连接是否关联了某个用户
	CMDID_AppFrame_IDGateClientAuth CMDID_AppFrame = 1
	// /Gate客户端的心跳信息 Gate-->Online
	// 定时或者连接断开时，发送到Online,
	// Online 用来判断 某用户的连接是否断开，
	// 是否还在线
	CMDID_AppFrame_IDGateSingleConnectPulse CMDID_AppFrame = 2
	// /用户上线
	// 主要是Online 用来告之其他app,如财富、比赛、列表、任务等等，
	// 某个用户上线了，或者重新上线了
	// 对于比赛服务器来说，需要客户端主动发送
	CMDID_AppFrame_IDUserOnlineReq CMDID_AppFrame = 3
	// 表示服务器是否允许该用户进入到此
	// 或者比赛服务器告诉给Online 说，某用户已经离开了该房间
	// 暂时同时使用这样一个报文，在以后可以根据需要定义新的报文
	CMDID_AppFrame_IDUserOnlineRsp CMDID_AppFrame = 4
	CMDID_AppFrame_IDUserOffline   CMDID_AppFrame = 5
	// 订阅事件
	// 1）用户登录成功
	// 2）用户注销
	CMDID_AppFrame_IDSubscribeReq         CMDID_AppFrame = 6
	CMDID_AppFrame_IDUserLeaveMatchNotify CMDID_AppFrame = 7
	CMDID_AppFrame_IDQueryUserInfoReq     CMDID_AppFrame = 9
	CMDID_AppFrame_IDQueryUserInfoRsp     CMDID_AppFrame = 10
	CMDID_AppFrame_IDChangeFundReq        CMDID_AppFrame = 11
	CMDID_AppFrame_IDChangeFundRsp        CMDID_AppFrame = 12
	CMDID_AppFrame_IDAppHeartPulse        CMDID_AppFrame = 13
	CMDID_AppFrame_IDWorkLoadReq          CMDID_AppFrame = 14
	CMDID_AppFrame_IDWorkLoadRsp          CMDID_AppFrame = 15
	CMDID_AppFrame_IDMsgToBatchUsers      CMDID_AppFrame = 16
	CMDID_AppFrame_IDStopAppReq           CMDID_AppFrame = 17
	CMDID_AppFrame_IDStopAppRsp           CMDID_AppFrame = 18
	// 系统消息广播
	CMDID_AppFrame_IDBroadcastToCenter CMDID_AppFrame = 19
	CMDID_AppFrame_IDBroadcastToClient CMDID_AppFrame = 20
	CMDID_AppFrame_IDLast              CMDID_AppFrame = 100
)

var CMDID_AppFrame_name = map[int32]string{
	0:   "IDUnknow",
	1:   "IDGateClientAuth",
	2:   "IDGateSingleConnectPulse",
	3:   "IDUserOnlineReq",
	4:   "IDUserOnlineRsp",
	5:   "IDUserOffline",
	6:   "IDSubscribeReq",
	7:   "IDUserLeaveMatchNotify",
	9:   "IDQueryUserInfoReq",
	10:  "IDQueryUserInfoRsp",
	11:  "IDChangeFundReq",
	12:  "IDChangeFundRsp",
	13:  "IDAppHeartPulse",
	14:  "IDWorkLoadReq",
	15:  "IDWorkLoadRsp",
	16:  "IDMsgToBatchUsers",
	17:  "IDStopAppReq",
	18:  "IDStopAppRsp",
	19:  "IDBroadcastToCenter",
	20:  "IDBroadcastToClient",
	100: "IDLast",
}
var CMDID_AppFrame_value = map[string]int32{
	"IDUnknow":                 0,
	"IDGateClientAuth":         1,
	"IDGateSingleConnectPulse": 2,
	"IDUserOnlineReq":          3,
	"IDUserOnlineRsp":          4,
	"IDUserOffline":            5,
	"IDSubscribeReq":           6,
	"IDUserLeaveMatchNotify":   7,
	"IDQueryUserInfoReq":       9,
	"IDQueryUserInfoRsp":       10,
	"IDChangeFundReq":          11,
	"IDChangeFundRsp":          12,
	"IDAppHeartPulse":          13,
	"IDWorkLoadReq":            14,
	"IDWorkLoadRsp":            15,
	"IDMsgToBatchUsers":        16,
	"IDStopAppReq":             17,
	"IDStopAppRsp":             18,
	"IDBroadcastToCenter":      19,
	"IDBroadcastToClient":      20,
	"IDLast":                   100,
}

func (x CMDID_AppFrame) String() string {
	return proto.EnumName(CMDID_AppFrame_name, int32(x))
}
func (CMDID_AppFrame) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EventType_Online int32

const (
	EventType_Online_ETUnknow        EventType_Online = 0
	EventType_Online_ETOnline_Login  EventType_Online = 1
	EventType_Online_ETOnline_Logout EventType_Online = 2
)

var EventType_Online_name = map[int32]string{
	0: "ETUnknow",
	1: "ETOnline_Login",
	2: "ETOnline_Logout",
}
var EventType_Online_value = map[string]int32{
	"ETUnknow":        0,
	"ETOnline_Login":  1,
	"ETOnline_Logout": 2,
}

func (x EventType_Online) String() string {
	return proto.EnumName(EventType_Online_name, int32(x))
}
func (EventType_Online) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GateClientAuth_State int32

const (
	GateClientAuth_AuthSet          GateClientAuth_State = 0
	GateClientAuth_AuthClear        GateClientAuth_State = 1
	GateClientAuth_AuthClearPassive GateClientAuth_State = 2
)

var GateClientAuth_State_name = map[int32]string{
	0: "AuthSet",
	1: "AuthClear",
	2: "AuthClearPassive",
}
var GateClientAuth_State_value = map[string]int32{
	"AuthSet":          0,
	"AuthClear":        1,
	"AuthClearPassive": 2,
}

func (x GateClientAuth_State) String() string {
	return proto.EnumName(GateClientAuth_State_name, int32(x))
}
func (GateClientAuth_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type UserOnlineReq_OnlineType int32

const (
	UserOnlineReq_IDUnknow    UserOnlineReq_OnlineType = 0
	UserOnlineReq_OL_Online   UserOnlineReq_OnlineType = 1
	UserOnlineReq_OL_ReOnline UserOnlineReq_OnlineType = 2
)

var UserOnlineReq_OnlineType_name = map[int32]string{
	0: "IDUnknow",
	1: "OL_Online",
	2: "OL_ReOnline",
}
var UserOnlineReq_OnlineType_value = map[string]int32{
	"IDUnknow":    0,
	"OL_Online":   1,
	"OL_ReOnline": 2,
}

func (x UserOnlineReq_OnlineType) String() string {
	return proto.EnumName(UserOnlineReq_OnlineType_name, int32(x))
}
func (UserOnlineReq_OnlineType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type UserOnlineRsp_Result int32

const (
	UserOnlineRsp_IDUnknow UserOnlineRsp_Result = 0
	UserOnlineRsp_SUCCESS  UserOnlineRsp_Result = 1
	UserOnlineRsp_FAIL     UserOnlineRsp_Result = 2
)

var UserOnlineRsp_Result_name = map[int32]string{
	0: "IDUnknow",
	1: "SUCCESS",
	2: "FAIL",
}
var UserOnlineRsp_Result_value = map[string]int32{
	"IDUnknow": 0,
	"SUCCESS":  1,
	"FAIL":     2,
}

func (x UserOnlineRsp_Result) String() string {
	return proto.EnumName(UserOnlineRsp_Result_name, int32(x))
}
func (UserOnlineRsp_Result) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type UserOffline_OfflineType int32

const (
	UserOffline_IDUnknow   UserOffline_OfflineType = 0
	UserOffline_OL_Break   UserOffline_OfflineType = 3
	UserOffline_OL_OffLine UserOffline_OfflineType = 4
	UserOffline_OL_TimeOut UserOffline_OfflineType = 5
)

var UserOffline_OfflineType_name = map[int32]string{
	0: "IDUnknow",
	3: "OL_Break",
	4: "OL_OffLine",
	5: "OL_TimeOut",
}
var UserOffline_OfflineType_value = map[string]int32{
	"IDUnknow":   0,
	"OL_Break":   3,
	"OL_OffLine": 4,
	"OL_TimeOut": 5,
}

func (x UserOffline_OfflineType) String() string {
	return proto.EnumName(UserOffline_OfflineType_name, int32(x))
}
func (UserOffline_OfflineType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type QueryUserInfoRsp_Result int32

const (
	QueryUserInfoRsp_IDUnknow  QueryUserInfoRsp_Result = 0
	QueryUserInfoRsp_SUCCESS   QueryUserInfoRsp_Result = 1
	QueryUserInfoRsp_NOT_EXIST QueryUserInfoRsp_Result = 2
)

var QueryUserInfoRsp_Result_name = map[int32]string{
	0: "IDUnknow",
	1: "SUCCESS",
	2: "NOT_EXIST",
}
var QueryUserInfoRsp_Result_value = map[string]int32{
	"IDUnknow":  0,
	"SUCCESS":   1,
	"NOT_EXIST": 2,
}

func (x QueryUserInfoRsp_Result) String() string {
	return proto.EnumName(QueryUserInfoRsp_Result_name, int32(x))
}
func (QueryUserInfoRsp_Result) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

type SubscribeReq_Operations int32

const (
	SubscribeReq_IDUnknow         SubscribeReq_Operations = 0
	SubscribeReq_SUBSCRIBE        SubscribeReq_Operations = 1
	SubscribeReq_CANCEL_SUBSCRIBE SubscribeReq_Operations = 2
	SubscribeReq_CANCEL_ALL       SubscribeReq_Operations = 3
	SubscribeReq_SUBSCRIBE_ALL    SubscribeReq_Operations = 4
)

var SubscribeReq_Operations_name = map[int32]string{
	0: "IDUnknow",
	1: "SUBSCRIBE",
	2: "CANCEL_SUBSCRIBE",
	3: "CANCEL_ALL",
	4: "SUBSCRIBE_ALL",
}
var SubscribeReq_Operations_value = map[string]int32{
	"IDUnknow":         0,
	"SUBSCRIBE":        1,
	"CANCEL_SUBSCRIBE": 2,
	"CANCEL_ALL":       3,
	"SUBSCRIBE_ALL":    4,
}

func (x SubscribeReq_Operations) String() string {
	return proto.EnumName(SubscribeReq_Operations_name, int32(x))
}
func (SubscribeReq_Operations) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

type AppHeartPulse_PulseType int32

const (
	AppHeartPulse_IDUnknow AppHeartPulse_PulseType = 0
	AppHeartPulse_RESTART  AppHeartPulse_PulseType = 1
	AppHeartPulse_USUAL    AppHeartPulse_PulseType = 2
)

var AppHeartPulse_PulseType_name = map[int32]string{
	0: "IDUnknow",
	1: "RESTART",
	2: "USUAL",
}
var AppHeartPulse_PulseType_value = map[string]int32{
	"IDUnknow": 0,
	"RESTART":  1,
	"USUAL":    2,
}

func (x AppHeartPulse_PulseType) String() string {
	return proto.EnumName(AppHeartPulse_PulseType_name, int32(x))
}
func (AppHeartPulse_PulseType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

// 一般来自于Online 与Login
// 表示Gate的某个连接，用户登录成功，或者注销登录了，或者被顶号登录了
type GateClientAuth struct {
	Base       *bs_types.BaseInfo   `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	GateConnId uint64               `protobuf:"varint,2,opt,name=gate_conn_id,json=gateConnId" json:"gate_conn_id,omitempty"`
	AuthState  GateClientAuth_State `protobuf:"varint,3,opt,name=auth_state,json=authState,enum=bs.appframe.GateClientAuth_State" json:"auth_state,omitempty"`
	UserId     uint64               `protobuf:"varint,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GateClientAuth) Reset()                    { *m = GateClientAuth{} }
func (m *GateClientAuth) String() string            { return proto.CompactTextString(m) }
func (*GateClientAuth) ProtoMessage()               {}
func (*GateClientAuth) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GateClientAuth) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

// 来自于Gate,表示相关联接在发报文到appss
type GateSingleConnectPulse struct {
	Base         *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	NetSpeed     uint32             `protobuf:"varint,2,opt,name=net_speed,json=netSpeed" json:"net_speed,omitempty"`
	IsConnectted bool               `protobuf:"varint,3,opt,name=is_connectted,json=isConnectted" json:"is_connectted,omitempty"`
	UserId       uint64             `protobuf:"varint,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ConnId       uint64             `protobuf:"varint,5,opt,name=conn_id,json=connId" json:"conn_id,omitempty"`
}

func (m *GateSingleConnectPulse) Reset()                    { *m = GateSingleConnectPulse{} }
func (m *GateSingleConnectPulse) String() string            { return proto.CompactTextString(m) }
func (*GateSingleConnectPulse) ProtoMessage()               {}
func (*GateSingleConnectPulse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GateSingleConnectPulse) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type UserOnlineReq struct {
	Base       *bs_types.BaseInfo       `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	OnlineType UserOnlineReq_OnlineType `protobuf:"varint,2,opt,name=online_type,json=onlineType,enum=bs.appframe.UserOnlineReq_OnlineType" json:"online_type,omitempty"`
	// 	types.BaseUserInfo base_info=2;
	// 	types.ExtraUserInfo extra_info=3;
	// 	types.UserSessionInfo session_info = 4;
	UserId uint64 `protobuf:"varint,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *UserOnlineReq) Reset()                    { *m = UserOnlineReq{} }
func (m *UserOnlineReq) String() string            { return proto.CompactTextString(m) }
func (*UserOnlineReq) ProtoMessage()               {}
func (*UserOnlineReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserOnlineReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type UserOnlineRsp struct {
	Base      *bs_types.BaseInfo   `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	ReqResult UserOnlineRsp_Result `protobuf:"varint,2,opt,name=req_result,json=reqResult,enum=bs.appframe.UserOnlineRsp_Result" json:"req_result,omitempty"`
	RspInfo   string               `protobuf:"bytes,3,opt,name=rsp_info,json=rspInfo" json:"rsp_info,omitempty"`
	UserId    uint64               `protobuf:"varint,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// 是否是通知，
	// 有二种情况，一种
	// 是回复，另一种是通知
	IsNotify bool `protobuf:"varint,5,opt,name=is_notify,json=isNotify" json:"is_notify,omitempty"`
	// 下面这二项，只有在比赛房间，且成功才有。
	PlanId  uint64 `protobuf:"varint,6,opt,name=plan_id,json=planId" json:"plan_id,omitempty"`
	MatchId uint64 `protobuf:"varint,7,opt,name=match_id,json=matchId" json:"match_id,omitempty"`
}

func (m *UserOnlineRsp) Reset()                    { *m = UserOnlineRsp{} }
func (m *UserOnlineRsp) String() string            { return proto.CompactTextString(m) }
func (*UserOnlineRsp) ProtoMessage()               {}
func (*UserOnlineRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UserOnlineRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type UserOffline struct {
	Base    *bs_types.BaseInfo      `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	OffType UserOffline_OfflineType `protobuf:"varint,2,opt,name=off_type,json=offType,enum=bs.appframe.UserOffline_OfflineType" json:"off_type,omitempty"`
	UserId  uint64                  `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *UserOffline) Reset()                    { *m = UserOffline{} }
func (m *UserOffline) String() string            { return proto.CompactTextString(m) }
func (*UserOffline) ProtoMessage()               {}
func (*UserOffline) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserOffline) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type QueryUserInfoReq struct {
	Base      *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	UserId    uint64             `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	SessionId uint64             `protobuf:"varint,3,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *QueryUserInfoReq) Reset()                    { *m = QueryUserInfoReq{} }
func (m *QueryUserInfoReq) String() string            { return proto.CompactTextString(m) }
func (*QueryUserInfoReq) ProtoMessage()               {}
func (*QueryUserInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *QueryUserInfoReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type QueryUserInfoRsp struct {
	Base      *bs_types.BaseInfo      `protobuf:"bytes,10,opt,name=base" json:"base,omitempty"`
	UserId    uint64                  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	SessionId uint64                  `protobuf:"varint,9,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	ReqResult QueryUserInfoRsp_Result `protobuf:"varint,2,opt,name=req_result,json=reqResult,enum=bs.appframe.QueryUserInfoRsp_Result" json:"req_result,omitempty"`
	ErrInfo   string                  `protobuf:"bytes,3,opt,name=err_info,json=errInfo" json:"err_info,omitempty"`
}

func (m *QueryUserInfoRsp) Reset()                    { *m = QueryUserInfoRsp{} }
func (m *QueryUserInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*QueryUserInfoRsp) ProtoMessage()               {}
func (*QueryUserInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QueryUserInfoRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type ChangeFundReq struct {
	Base *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	// 	repeated types.FundItem array_change=1;
	ChangeReason uint32 `protobuf:"varint,2,opt,name=change_reason,json=changeReason" json:"change_reason,omitempty"`
	GameId       uint32 `protobuf:"varint,3,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	TableId      uint32 `protobuf:"varint,4,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	SeatIndex    uint32 `protobuf:"varint,5,opt,name=seat_index,json=seatIndex" json:"seat_index,omitempty"`
	Note         string `protobuf:"bytes,6,opt,name=note" json:"note,omitempty"`
}

func (m *ChangeFundReq) Reset()                    { *m = ChangeFundReq{} }
func (m *ChangeFundReq) String() string            { return proto.CompactTextString(m) }
func (*ChangeFundReq) ProtoMessage()               {}
func (*ChangeFundReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ChangeFundReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type ChangeFundRsp struct {
	Base         *bs_types.BaseInfo `protobuf:"bytes,4,opt,name=base" json:"base,omitempty"`
	ChangeResult uint32             `protobuf:"varint,1,opt,name=change_result,json=changeResult" json:"change_result,omitempty"`
	FailInfo     string             `protobuf:"bytes,2,opt,name=fail_info,json=failInfo" json:"fail_info,omitempty"`
}

func (m *ChangeFundRsp) Reset()                    { *m = ChangeFundRsp{} }
func (m *ChangeFundRsp) String() string            { return proto.CompactTextString(m) }
func (*ChangeFundRsp) ProtoMessage()               {}
func (*ChangeFundRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ChangeFundRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type SubscribeReq struct {
	Base      *bs_types.BaseInfo      `protobuf:"bytes,3,opt,name=base" json:"base,omitempty"`
	ReqType   SubscribeReq_Operations `protobuf:"varint,1,opt,name=req_type,json=reqType,enum=bs.appframe.SubscribeReq_Operations" json:"req_type,omitempty"`
	ArrUserId []uint64                `protobuf:"varint,2,rep,packed,name=arr_user_id,json=arrUserId" json:"arr_user_id,omitempty"`
}

func (m *SubscribeReq) Reset()                    { *m = SubscribeReq{} }
func (m *SubscribeReq) String() string            { return proto.CompactTextString(m) }
func (*SubscribeReq) ProtoMessage()               {}
func (*SubscribeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SubscribeReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type UserLeaveMatchNotify struct {
	Base *bs_types.BaseInfo `protobuf:"bytes,2,opt,name=base" json:"base,omitempty"`
	// 如果这个users为空，则表示应当清空这个app所有的在线用户 （比赛）
	ArrUserId []uint64 `protobuf:"varint,1,rep,packed,name=arr_user_id,json=arrUserId" json:"arr_user_id,omitempty"`
}

func (m *UserLeaveMatchNotify) Reset()                    { *m = UserLeaveMatchNotify{} }
func (m *UserLeaveMatchNotify) String() string            { return proto.CompactTextString(m) }
func (*UserLeaveMatchNotify) ProtoMessage()               {}
func (*UserLeaveMatchNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UserLeaveMatchNotify) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type AppHeartPulse struct {
	Base      *bs_types.BaseInfo      `protobuf:"bytes,5,opt,name=base" json:"base,omitempty"`
	PulseData AppHeartPulse_PulseType `protobuf:"varint,1,opt,name=pulse_data,json=pulseData,enum=bs.appframe.AppHeartPulse_PulseType" json:"pulse_data,omitempty"`
	AppId     uint32                  `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppType   uint32                  `protobuf:"varint,3,opt,name=app_type,json=appType" json:"app_type,omitempty"`
	AttData   uint64                  `protobuf:"varint,4,opt,name=att_data,json=attData" json:"att_data,omitempty"`
}

func (m *AppHeartPulse) Reset()                    { *m = AppHeartPulse{} }
func (m *AppHeartPulse) String() string            { return proto.CompactTextString(m) }
func (*AppHeartPulse) ProtoMessage()               {}
func (*AppHeartPulse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AppHeartPulse) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type WorkLoadReq struct {
	Base     *bs_types.BaseInfo `protobuf:"bytes,4,opt,name=base" json:"base,omitempty"`
	AttData  uint32             `protobuf:"varint,1,opt,name=att_data,json=attData" json:"att_data,omitempty"`
	AttInfo  string             `protobuf:"bytes,2,opt,name=att_info,json=attInfo" json:"att_info,omitempty"`
	GameKind uint32             `protobuf:"varint,3,opt,name=game_kind,json=gameKind" json:"game_kind,omitempty"`
}

func (m *WorkLoadReq) Reset()                    { *m = WorkLoadReq{} }
func (m *WorkLoadReq) String() string            { return proto.CompactTextString(m) }
func (*WorkLoadReq) ProtoMessage()               {}
func (*WorkLoadReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *WorkLoadReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type WorkLoadRsp struct {
	Base        *bs_types.BaseInfo `protobuf:"bytes,4,opt,name=base" json:"base,omitempty"`
	MaxLoad     uint32             `protobuf:"varint,1,opt,name=max_load,json=maxLoad" json:"max_load,omitempty"`
	CurrentLoad uint32             `protobuf:"varint,2,opt,name=current_load,json=currentLoad" json:"current_load,omitempty"`
	GameKind    uint32             `protobuf:"varint,3,opt,name=game_kind,json=gameKind" json:"game_kind,omitempty"`
}

func (m *WorkLoadRsp) Reset()                    { *m = WorkLoadRsp{} }
func (m *WorkLoadRsp) String() string            { return proto.CompactTextString(m) }
func (*WorkLoadRsp) ProtoMessage()               {}
func (*WorkLoadRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *WorkLoadRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type MsgToBatchUsers struct {
	Base         *bs_types.BaseInfo `protobuf:"bytes,6,opt,name=base" json:"base,omitempty"`
	ArrayUserId  []uint64           `protobuf:"varint,1,rep,packed,name=array_user_id,json=arrayUserId" json:"array_user_id,omitempty"`
	DataCmdkind  uint32             `protobuf:"varint,2,opt,name=data_cmdkind,json=dataCmdkind" json:"data_cmdkind,omitempty"`
	DataCmdsubid uint32             `protobuf:"varint,3,opt,name=data_cmdsubid,json=dataCmdsubid" json:"data_cmdsubid,omitempty"`
	DataBuff     []byte             `protobuf:"bytes,4,opt,name=data_buff,json=dataBuff,proto3" json:"data_buff,omitempty"`
	AttSessionid uint64             `protobuf:"varint,5,opt,name=att_sessionid,json=attSessionid" json:"att_sessionid,omitempty"`
}

func (m *MsgToBatchUsers) Reset()                    { *m = MsgToBatchUsers{} }
func (m *MsgToBatchUsers) String() string            { return proto.CompactTextString(m) }
func (*MsgToBatchUsers) ProtoMessage()               {}
func (*MsgToBatchUsers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *MsgToBatchUsers) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type StopAppReq struct {
	Base    *bs_types.BaseInfo `protobuf:"bytes,3,opt,name=base" json:"base,omitempty"`
	AppId   uint32             `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppType uint32             `protobuf:"varint,2,opt,name=app_type,json=appType" json:"app_type,omitempty"`
}

func (m *StopAppReq) Reset()                    { *m = StopAppReq{} }
func (m *StopAppReq) String() string            { return proto.CompactTextString(m) }
func (*StopAppReq) ProtoMessage()               {}
func (*StopAppReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *StopAppReq) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type StopAppRsp struct {
	Base    *bs_types.BaseInfo `protobuf:"bytes,3,opt,name=base" json:"base,omitempty"`
	AppId   uint32             `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppType uint32             `protobuf:"varint,2,opt,name=app_type,json=appType" json:"app_type,omitempty"`
}

func (m *StopAppRsp) Reset()                    { *m = StopAppRsp{} }
func (m *StopAppRsp) String() string            { return proto.CompactTextString(m) }
func (*StopAppRsp) ProtoMessage()               {}
func (*StopAppRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *StopAppRsp) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type BroadcastToCenter struct {
	Base           *bs_types.BaseInfo `protobuf:"bytes,6,opt,name=base" json:"base,omitempty"`
	Description    string             `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	GameKind       uint32             `protobuf:"varint,2,opt,name=game_kind,json=gameKind" json:"game_kind,omitempty"`
	IsOnlySelfKind bool               `protobuf:"varint,3,opt,name=is_only_self_kind,json=isOnlySelfKind" json:"is_only_self_kind,omitempty"`
}

func (m *BroadcastToCenter) Reset()                    { *m = BroadcastToCenter{} }
func (m *BroadcastToCenter) String() string            { return proto.CompactTextString(m) }
func (*BroadcastToCenter) ProtoMessage()               {}
func (*BroadcastToCenter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *BroadcastToCenter) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

type BroadcastToClient struct {
	Base         *bs_types.BaseInfo `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	DataCmdkind  uint32             `protobuf:"varint,2,opt,name=data_cmdkind,json=dataCmdkind" json:"data_cmdkind,omitempty"`
	DataCmdsubid uint32             `protobuf:"varint,3,opt,name=data_cmdsubid,json=dataCmdsubid" json:"data_cmdsubid,omitempty"`
	DataBuff     []byte             `protobuf:"bytes,4,opt,name=data_buff,json=dataBuff,proto3" json:"data_buff,omitempty"`
}

func (m *BroadcastToClient) Reset()                    { *m = BroadcastToClient{} }
func (m *BroadcastToClient) String() string            { return proto.CompactTextString(m) }
func (*BroadcastToClient) ProtoMessage()               {}
func (*BroadcastToClient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *BroadcastToClient) GetBase() *bs_types.BaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func init() {
	proto.RegisterType((*GateClientAuth)(nil), "bs.appframe.GateClientAuth")
	proto.RegisterType((*GateSingleConnectPulse)(nil), "bs.appframe.GateSingleConnectPulse")
	proto.RegisterType((*UserOnlineReq)(nil), "bs.appframe.UserOnlineReq")
	proto.RegisterType((*UserOnlineRsp)(nil), "bs.appframe.UserOnlineRsp")
	proto.RegisterType((*UserOffline)(nil), "bs.appframe.UserOffline")
	proto.RegisterType((*QueryUserInfoReq)(nil), "bs.appframe.QueryUserInfoReq")
	proto.RegisterType((*QueryUserInfoRsp)(nil), "bs.appframe.QueryUserInfoRsp")
	proto.RegisterType((*ChangeFundReq)(nil), "bs.appframe.ChangeFundReq")
	proto.RegisterType((*ChangeFundRsp)(nil), "bs.appframe.ChangeFundRsp")
	proto.RegisterType((*SubscribeReq)(nil), "bs.appframe.SubscribeReq")
	proto.RegisterType((*UserLeaveMatchNotify)(nil), "bs.appframe.UserLeaveMatchNotify")
	proto.RegisterType((*AppHeartPulse)(nil), "bs.appframe.AppHeartPulse")
	proto.RegisterType((*WorkLoadReq)(nil), "bs.appframe.WorkLoadReq")
	proto.RegisterType((*WorkLoadRsp)(nil), "bs.appframe.WorkLoadRsp")
	proto.RegisterType((*MsgToBatchUsers)(nil), "bs.appframe.MsgToBatchUsers")
	proto.RegisterType((*StopAppReq)(nil), "bs.appframe.StopAppReq")
	proto.RegisterType((*StopAppRsp)(nil), "bs.appframe.StopAppRsp")
	proto.RegisterType((*BroadcastToCenter)(nil), "bs.appframe.BroadcastToCenter")
	proto.RegisterType((*BroadcastToClient)(nil), "bs.appframe.BroadcastToClient")
	proto.RegisterEnum("bs.appframe.CMDID_AppFrame", CMDID_AppFrame_name, CMDID_AppFrame_value)
	proto.RegisterEnum("bs.appframe.EventType_Online", EventType_Online_name, EventType_Online_value)
	proto.RegisterEnum("bs.appframe.GateClientAuth_State", GateClientAuth_State_name, GateClientAuth_State_value)
	proto.RegisterEnum("bs.appframe.UserOnlineReq_OnlineType", UserOnlineReq_OnlineType_name, UserOnlineReq_OnlineType_value)
	proto.RegisterEnum("bs.appframe.UserOnlineRsp_Result", UserOnlineRsp_Result_name, UserOnlineRsp_Result_value)
	proto.RegisterEnum("bs.appframe.UserOffline_OfflineType", UserOffline_OfflineType_name, UserOffline_OfflineType_value)
	proto.RegisterEnum("bs.appframe.QueryUserInfoRsp_Result", QueryUserInfoRsp_Result_name, QueryUserInfoRsp_Result_value)
	proto.RegisterEnum("bs.appframe.SubscribeReq_Operations", SubscribeReq_Operations_name, SubscribeReq_Operations_value)
	proto.RegisterEnum("bs.appframe.AppHeartPulse_PulseType", AppHeartPulse_PulseType_name, AppHeartPulse_PulseType_value)
}

func init() { proto.RegisterFile("railgun/protodefine/AppFrame/AppFrame.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x72, 0xdb, 0xd4,
	0x17, 0xff, 0xcb, 0xf1, 0x97, 0x8e, 0x3f, 0xa2, 0xa8, 0xfd, 0x97, 0x50, 0x3e, 0xa6, 0x15, 0xd0,
	0x81, 0x32, 0xb8, 0x43, 0x58, 0xc1, 0x06, 0x62, 0xd9, 0x01, 0x0d, 0x6e, 0x53, 0x24, 0x7b, 0x60,
	0x85, 0x46, 0xb6, 0xaf, 0x5c, 0x4d, 0x1c, 0x49, 0x95, 0xe4, 0x52, 0xbf, 0x00, 0xc3, 0x92, 0x47,
	0x60, 0xc3, 0x92, 0x1d, 0x6f, 0xc0, 0x9a, 0x1d, 0x2b, 0x5e, 0x80, 0x2d, 0x7b, 0x58, 0x70, 0xce,
	0xbd, 0xb2, 0x2d, 0xc9, 0x49, 0xe3, 0xcc, 0x30, 0x6c, 0x12, 0x9f, 0xdf, 0xbd, 0xe7, 0x9e, 0xaf,
	0xdf, 0x39, 0xf7, 0x0a, 0xde, 0x8d, 0x1c, 0x6f, 0x3e, 0x5b, 0xf8, 0x0f, 0xc2, 0x28, 0x48, 0x82,
	0x29, 0x73, 0x3d, 0x9f, 0x3d, 0x38, 0x0e, 0xc3, 0x93, 0xc8, 0x39, 0xdf, 0xfc, 0xe8, 0xf0, 0x55,
	0xb5, 0x31, 0x8e, 0x3b, 0x4e, 0x18, 0xba, 0x04, 0xdd, 0xbe, 0x77, 0x91, 0xe6, 0xf9, 0x32, 0x59,
	0x86, 0xec, 0x01, 0xfd, 0x89, 0x85, 0x92, 0xf6, 0xa7, 0x04, 0xed, 0x4f, 0x9d, 0x84, 0xe9, 0x73,
	0x8f, 0xf9, 0xc9, 0xf1, 0x22, 0x79, 0xa2, 0xde, 0x83, 0xf2, 0xd8, 0x89, 0xd9, 0xa1, 0x74, 0x47,
	0x7a, 0xbb, 0x71, 0xa4, 0x76, 0xf0, 0x58, 0xa1, 0xd1, 0x45, 0xd4, 0xf0, 0xdd, 0xc0, 0xe4, 0xeb,
	0xea, 0x1d, 0x68, 0xce, 0x50, 0xd3, 0x9e, 0x04, 0xbe, 0x6f, 0x7b, 0xd3, 0xc3, 0x12, 0xee, 0x2f,
	0x9b, 0x40, 0x98, 0x8e, 0x90, 0x31, 0x55, 0x3f, 0x01, 0x70, 0xf0, 0x44, 0x3b, 0x4e, 0x10, 0x3b,
	0xdc, 0xc3, 0xf5, 0xf6, 0xd1, 0xdd, 0x4e, 0xc6, 0xcd, 0x4e, 0xde, 0x74, 0xc7, 0xa2, 0x8d, 0xa6,
	0x4c, 0x4a, 0xfc, 0xa7, 0xfa, 0x12, 0xd4, 0x16, 0x31, 0x8b, 0xe8, 0xf8, 0x32, 0x3f, 0xbe, 0x4a,
	0xa2, 0x31, 0xd5, 0x3e, 0x84, 0x8a, 0xd8, 0xd1, 0x80, 0x1a, 0xa9, 0x5a, 0x2c, 0x51, 0xfe, 0xa7,
	0xb6, 0x40, 0x26, 0x41, 0x9f, 0x33, 0x27, 0x52, 0x24, 0xf5, 0x26, 0x28, 0x6b, 0xf1, 0xb1, 0x13,
	0xc7, 0xde, 0x33, 0xa6, 0x94, 0xb4, 0x9f, 0x25, 0xb8, 0x45, 0x76, 0x2d, 0xcf, 0x9f, 0xcd, 0xb9,
	0xab, 0x6c, 0x92, 0x3c, 0x5e, 0xcc, 0x31, 0xa4, 0x5d, 0x43, 0x7f, 0x05, 0x64, 0x9f, 0x25, 0x76,
	0x1c, 0x32, 0x26, 0xe2, 0x6e, 0x99, 0x75, 0x04, 0x2c, 0x92, 0xd5, 0x37, 0xa0, 0xe5, 0xc5, 0x3c,
	0x2b, 0x78, 0x6e, 0x82, 0x1b, 0x28, 0xf0, 0xba, 0xd9, 0xf4, 0x62, 0x7d, 0x8d, 0x5d, 0x1a, 0x18,
	0x2d, 0xac, 0x12, 0x5a, 0x11, 0x0b, 0x13, 0x9e, 0x4c, 0xed, 0x37, 0x09, 0x5a, 0x23, 0xdc, 0x73,
	0xea, 0xcf, 0xb1, 0x96, 0x26, 0x7b, 0xba, 0xb3, 0xb7, 0x27, 0xd0, 0x08, 0xb8, 0x92, 0x4d, 0xcb,
	0xdc, 0xdf, 0xf6, 0xd1, 0x5b, 0xb9, 0x3a, 0xe4, 0x0e, 0xee, 0x88, 0x5f, 0x43, 0xdc, 0x6c, 0x42,
	0xb0, 0xfe, 0x9d, 0xf5, 0xb9, 0x92, 0x2b, 0xc6, 0x47, 0x00, 0x1b, 0x15, 0xb5, 0x09, 0x75, 0xa3,
	0x37, 0xf2, 0xcf, 0xfc, 0xe0, 0x1b, 0x51, 0x92, 0xd3, 0x81, 0x2d, 0x96, 0xb1, 0x24, 0xfb, 0xd0,
	0x40, 0xd1, 0x64, 0x29, 0x50, 0xd2, 0x7e, 0x2a, 0xe5, 0xc2, 0x8a, 0xc3, 0x9d, 0xc3, 0x42, 0x76,
	0x45, 0xec, 0xa9, 0x1d, 0xb1, 0x78, 0x31, 0x4f, 0xd2, 0xa8, 0xee, 0x5e, 0x16, 0x55, 0x1c, 0x76,
	0x4c, 0xbe, 0xd1, 0x94, 0x51, 0x49, 0xfc, 0x54, 0x5f, 0x86, 0x7a, 0x14, 0x87, 0xb6, 0x87, 0x67,
	0xf2, 0x22, 0xc9, 0x66, 0x0d, 0x65, 0x32, 0x71, 0x79, 0x7d, 0xb0, 0xf4, 0x58, 0x5d, 0x3f, 0x48,
	0x3c, 0x77, 0xc9, 0xd3, 0x50, 0x37, 0xeb, 0x5e, 0xfc, 0x88, 0xcb, 0xa4, 0x15, 0xce, 0x1d, 0x5e,
	0xbc, 0xaa, 0xd0, 0x22, 0x11, 0xb5, 0xd0, 0xd2, 0xb9, 0x93, 0x4c, 0x9e, 0xd0, 0x4a, 0x8d, 0xaf,
	0xd4, 0xb8, 0x8c, 0xc9, 0x7b, 0x0f, 0xaa, 0xa9, 0x3b, 0xf9, 0xc4, 0x21, 0xb1, 0xad, 0x91, 0xae,
	0xf7, 0x2d, 0x0b, 0xd3, 0x56, 0x87, 0xf2, 0xc9, 0xb1, 0x31, 0xc0, 0x7c, 0xfd, 0x2e, 0x41, 0x83,
	0xc7, 0xe5, 0xba, 0x14, 0xd8, 0xce, 0xd9, 0xfa, 0x18, 0xea, 0x81, 0xeb, 0x66, 0x19, 0xf0, 0xe6,
	0x76, 0xae, 0xc4, 0x99, 0x9d, 0xf4, 0x3f, 0x27, 0x40, 0x0d, 0xb5, 0x8a, 0xd5, 0xdf, 0xcb, 0x55,
	0xdf, 0xc0, 0x92, 0x6e, 0x14, 0x0a, 0x51, 0xa0, 0x84, 0xf5, 0xee, 0x46, 0xcc, 0x39, 0x53, 0xf6,
	0xd4, 0x36, 0x12, 0x05, 0xc9, 0xe0, 0xba, 0x03, 0x2a, 0x7e, 0x39, 0x95, 0x87, 0xde, 0x39, 0x3b,
	0x5d, 0x24, 0x4a, 0x45, 0x8b, 0x40, 0xf9, 0x62, 0xc1, 0xa2, 0x25, 0x39, 0xc3, 0x7d, 0xbf, 0x06,
	0xcb, 0x33, 0xfe, 0x95, 0x72, 0x15, 0x7b, 0x0d, 0x20, 0x66, 0xd8, 0xfc, 0x81, 0xbf, 0xf1, 0x5d,
	0x4e, 0x11, 0x74, 0xff, 0xdb, 0x52, 0xd1, 0x68, 0x86, 0x83, 0xb0, 0xbb, 0x51, 0xe9, 0x05, 0x46,
	0xe5, 0x82, 0x51, 0x55, 0xbf, 0x80, 0xbb, 0xf9, 0x7a, 0x14, 0x5d, 0xba, 0x98, 0xbe, 0x2c, 0x8a,
	0x72, 0xf4, 0x45, 0x99, 0xf6, 0x6b, 0x47, 0xbb, 0x90, 0x0a, 0x5b, 0xf3, 0xd1, 0xe9, 0xd0, 0xee,
	0x7f, 0x65, 0x58, 0x43, 0x64, 0xd6, 0x2f, 0x38, 0x60, 0xf4, 0x27, 0x8e, 0x3f, 0x63, 0x27, 0x0b,
	0x7f, 0x7a, 0x9d, 0xd4, 0xe3, 0xc4, 0x9b, 0x70, 0x45, 0x0c, 0xc8, 0x89, 0x03, 0x3f, 0x1d, 0x89,
	0x4d, 0x01, 0x9a, 0x1c, 0xa3, 0x54, 0xcd, 0x30, 0xb0, 0x55, 0x0d, 0x5a, 0x66, 0x95, 0x44, 0xd1,
	0x1b, 0x89, 0x33, 0x9e, 0xb3, 0x55, 0xaf, 0xb5, 0xcc, 0x1a, 0x97, 0x57, 0x59, 0x74, 0x12, 0x0c,
	0x71, 0xca, 0x9e, 0xf3, 0x6e, 0x6b, 0x51, 0x16, 0x9d, 0xc4, 0x20, 0x40, 0x55, 0xa1, 0x8c, 0x8d,
	0xc8, 0x78, 0xaf, 0xc9, 0x26, 0xff, 0xad, 0x2d, 0x73, 0x41, 0x64, 0x4a, 0x59, 0xbe, 0x46, 0x10,
	0xbc, 0x2a, 0x52, 0x3e, 0x08, 0x9e, 0x4d, 0xec, 0x7e, 0x17, 0x2f, 0x56, 0x91, 0xf3, 0x12, 0x37,
	0x5b, 0x27, 0x80, 0x27, 0xfd, 0x2f, 0x09, 0x9a, 0xd6, 0x62, 0x1c, 0x4f, 0x22, 0x6f, 0x9c, 0x1b,
	0xd0, 0x7b, 0x57, 0xf7, 0x26, 0xb1, 0x81, 0xf7, 0xa6, 0x74, 0x01, 0x17, 0xb2, 0x87, 0x76, 0x4e,
	0x43, 0x16, 0x39, 0x09, 0xd2, 0x28, 0xc6, 0x69, 0xc5, 0x9e, 0xf2, 0x9e, 0x7b, 0x1d, 0x1a, 0x0e,
	0x32, 0x61, 0xc3, 0xff, 0x3d, 0xa2, 0x1b, 0x42, 0x23, 0xd1, 0xa2, 0x63, 0xec, 0xb3, 0xb5, 0xda,
	0xf6, 0x80, 0xb6, 0x46, 0x5d, 0x4b, 0x37, 0x8d, 0x6e, 0x5f, 0xdc, 0x99, 0xfa, 0xf1, 0x23, 0xbd,
	0x3f, 0xb0, 0x37, 0x68, 0x89, 0x1a, 0x35, 0x45, 0x8f, 0x07, 0x03, 0x6c, 0xe4, 0x03, 0x68, 0xad,
	0x97, 0x39, 0x54, 0xd6, 0xbe, 0x86, 0x9b, 0x64, 0x6d, 0xc0, 0x9c, 0x67, 0xec, 0x21, 0xcd, 0xb6,
	0x74, 0x26, 0xae, 0x92, 0x50, 0xba, 0x22, 0x09, 0x85, 0x18, 0xa4, 0x62, 0x0c, 0x7f, 0x23, 0x3d,
	0xf1, 0xc5, 0xf3, 0x19, 0xde, 0xe5, 0x85, 0xdb, 0xba, 0x72, 0xc5, 0xc9, 0xd8, 0x6c, 0x21, 0x29,
	0xd8, 0x53, 0x27, 0x71, 0x2e, 0x4c, 0x70, 0xee, 0xdc, 0x0e, 0xff, 0xcb, 0x87, 0x9f, 0xcc, 0xf5,
	0x7a, 0xa8, 0xa6, 0xfe, 0x1f, 0xaa, 0xb8, 0x7d, 0x35, 0x5d, 0x5a, 0x66, 0x05, 0x25, 0x41, 0x5e,
	0x82, 0x79, 0xe9, 0x04, 0xad, 0x6b, 0x28, 0xf3, 0xa2, 0xd0, 0x52, 0x92, 0x08, 0xa3, 0xe2, 0x0e,
	0xa9, 0xa1, 0x4c, 0x87, 0x69, 0xef, 0x83, 0xbc, 0x36, 0xb2, 0xdd, 0xa1, 0x66, 0xdf, 0x1a, 0x1e,
	0x9b, 0x43, 0x2c, 0x86, 0x0c, 0x95, 0x91, 0x35, 0x3a, 0xa6, 0xb9, 0xff, 0x1d, 0xce, 0xfd, 0x2f,
	0x83, 0xe8, 0x6c, 0x10, 0x38, 0xb9, 0xde, 0xbc, 0x8a, 0xd6, 0x59, 0x2f, 0xa4, 0xd4, 0x41, 0xe1,
	0xc5, 0x6a, 0x29, 0xc3, 0x65, 0x5a, 0xe2, 0xd7, 0x1f, 0xf2, 0x9c, 0x37, 0xeb, 0x19, 0x76, 0x5e,
	0x1a, 0x57, 0x9d, 0x80, 0xcf, 0x51, 0xd6, 0xbe, 0xcf, 0xba, 0x72, 0x8d, 0x0e, 0xe3, 0x97, 0xe0,
	0x73, 0x7b, 0x8e, 0x6a, 0x2b, 0x57, 0x50, 0xa6, 0x53, 0xd4, 0xbb, 0xd0, 0x9c, 0x2c, 0xa2, 0x08,
	0xdf, 0x81, 0x62, 0x59, 0xe4, 0xb8, 0x91, 0x62, 0x7c, 0xcb, 0x0b, 0x5d, 0xfa, 0x43, 0x82, 0xfd,
	0x87, 0xf1, 0x6c, 0x18, 0x74, 0x89, 0x79, 0xc4, 0x98, 0x78, 0xed, 0x56, 0xf5, 0x0a, 0xb7, 0x34,
	0x68, 0x21, 0xcb, 0x9c, 0x65, 0x81, 0x7a, 0x0d, 0x0e, 0x0a, 0xf2, 0x91, 0x7f, 0x94, 0x41, 0x7b,
	0x72, 0x3e, 0xe5, 0xf6, 0x53, 0xff, 0x08, 0xd3, 0x05, 0x44, 0xf3, 0x63, 0xb5, 0x25, 0x5e, 0x8c,
	0xd7, 0x53, 0xae, 0x99, 0xee, 0xe1, 0x18, 0x05, 0xc1, 0x37, 0x8d, 0x17, 0xae, 0xcb, 0xf3, 0xd5,
	0x34, 0xeb, 0x04, 0x74, 0x51, 0xa6, 0x13, 0xa8, 0x1e, 0xe9, 0x2d, 0xb1, 0x7e, 0x65, 0x35, 0x11,
	0xb4, 0x56, 0x98, 0xe6, 0x02, 0x58, 0x49, 0x10, 0x22, 0x63, 0xaf, 0x33, 0x61, 0x36, 0xec, 0x95,
	0x2e, 0x63, 0x6f, 0x29, 0xc7, 0xde, 0xac, 0x9d, 0x4c, 0x89, 0xff, 0x7d, 0x3b, 0x3f, 0x4a, 0x70,
	0xd0, 0x8d, 0xb0, 0xc0, 0x13, 0x27, 0x4e, 0x86, 0x81, 0x8e, 0xe5, 0x66, 0xd1, 0xce, 0xb5, 0xbb,
	0x03, 0x8d, 0x29, 0xa3, 0xd9, 0x18, 0xd2, 0x68, 0xe3, 0x46, 0x65, 0x33, 0x0b, 0xe5, 0x69, 0x53,
	0xca, 0xd3, 0x46, 0x7d, 0x07, 0x0e, 0xf0, 0x31, 0x87, 0x4f, 0xdc, 0x25, 0x66, 0x7d, 0xee, 0x6e,
	0xb8, 0x55, 0x37, 0xdb, 0x5e, 0x8c, 0x4f, 0xc7, 0xa5, 0x85, 0x30, 0x67, 0xd8, 0x0f, 0x05, 0x3f,
	0xf9, 0x47, 0xcb, 0xce, 0x37, 0xe4, 0x7f, 0xc1, 0x9f, 0xfb, 0xbf, 0xee, 0x41, 0x5b, 0x7f, 0xd8,
	0x33, 0x7a, 0xf6, 0xea, 0xcb, 0xb0, 0x30, 0x5b, 0x70, 0xb6, 0x1b, 0xbd, 0xfc, 0x27, 0x17, 0x0e,
	0x99, 0x57, 0xe1, 0x50, 0xa0, 0xdb, 0x1f, 0x44, 0x38, 0xf9, 0x6f, 0xc0, 0x3e, 0x9e, 0x90, 0xfd,
	0x3c, 0xc0, 0xf1, 0x5f, 0x04, 0xe3, 0x10, 0x1f, 0x73, 0x78, 0x27, 0xa4, 0xa0, 0x78, 0x0d, 0x2a,
	0x15, 0xbc, 0xa0, 0xdb, 0x46, 0x2f, 0x7b, 0x7b, 0x29, 0x55, 0xf5, 0x36, 0xdc, 0x12, 0xdb, 0x8a,
	0x37, 0x85, 0x52, 0x53, 0x6f, 0x81, 0x6a, 0xf4, 0x8a, 0x2f, 0x40, 0x45, 0xbe, 0x08, 0x47, 0x93,
	0x20, 0xfc, 0xc8, 0xbd, 0x59, 0x94, 0xc6, 0x16, 0x88, 0x3b, 0x9b, 0x02, 0xcc, 0x8d, 0x79, 0xa5,
	0x25, 0x3c, 0xce, 0x0c, 0x55, 0xa5, 0x5d, 0x80, 0x50, 0x75, 0x1f, 0x39, 0x7d, 0x60, 0xf4, 0x0a,
	0xc3, 0x45, 0x51, 0x54, 0x05, 0x9a, 0x18, 0xdb, 0xba, 0x15, 0x95, 0x83, 0x3c, 0x82, 0xaa, 0x2a,
	0xbe, 0x79, 0x6e, 0x18, 0xbd, 0x2d, 0x76, 0x2b, 0x37, 0xb6, 0x17, 0x78, 0x41, 0x94, 0x9b, 0x2a,
	0x40, 0xd5, 0xe8, 0x0d, 0x10, 0x53, 0xa6, 0xf7, 0x0d, 0x50, 0xfa, 0xcf, 0x10, 0xa6, 0x3e, 0x49,
	0xbf, 0xa0, 0xa8, 0xa0, 0xfd, 0xe1, 0xba, 0xa0, 0x98, 0xdf, 0xfe, 0x50, 0xac, 0xd8, 0x83, 0x60,
	0xe6, 0xf9, 0x58, 0x4e, 0x8c, 0x34, 0x8b, 0x05, 0xf8, 0xb0, 0x2e, 0x8d, 0xab, 0xfc, 0x6b, 0xff,
	0x83, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x70, 0x48, 0xd4, 0x2c, 0x51, 0x10, 0x00, 0x00,
}
